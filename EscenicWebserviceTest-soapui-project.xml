<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="ee053244-c772-42b9-8089-6e3b2d65b1ef" activeEnvironment="Default" name="EscenicWebserviceTest" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value="end-point"/>
  <con:entry key="TestSuite" value="ListTests"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value="http://qa-eta:8080"/>
</xml-fragment>]]></con:setting><con:setting id="ProjectSettings@shadowPassword"/></con:settings><con:interface xsi:type="con:RestService" id="867ffd34-8591-47bc-bb55-f0604ad323a0" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://qa-eta:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://qa-eta:8080</con:endpoint></con:endpoints><con:resource name="Lists" path="/webservice/escenic/lists/" id="22800657-8079-44e3-9a6d-81999cc8fc36"><con:settings/><con:parameters/><con:method name="Lists" id="1677e199-5d88-4e6c-ba76-b18c1ba4adcb" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetLists" id="4b778c04-e18b-488e-8d0d-8091257c6f37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint xsi:nil="true"/><con:request/><con:originalUri>http://qa-oberon/webservice/publication/qa/escenic/lists/</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="list-pool" path="/list-pool" id="896baf7e-921e-4381-a6c6-18805fbf333a"><con:settings/><con:parameters/><con:method name="Method 1" id="6cf6fdc7-05ea-4c19-94a3-779ec9c7172d" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="ccd1ca9d-1ca0-4307-8982-1b7c3efd11c9" mediaType="application/json"><con:settings/><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="content" path="/webservice/escenic/content/{CONTENTID}" id="9e66e30c-bab7-4bfb-a96c-9e96601f0772"><con:settings/><con:parameters><con:parameter><con:name>CONTENTID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Create" id="8ad10386-da9b-48a0-bee3-b1c94ac54a69" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:request></con:method><con:method name="Retrieve" id="fcebc9f1-9c8d-4b48-81ca-76d9ac47f6b0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:request name="Request 1" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="100" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="Update" id="10309074-0d7a-4046-a394-88d794b338f2" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="27e4f695-677c-4072-9d31-f2287069ebf7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete" id="46549eac-5eac-426a-a6f6-c488cac2979d" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>415 500 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="c0c2a771-74e3-4d09-a61d-dd6070dae2f2" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="2455" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="{LOCKID}" path="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" id="f23af222-efbf-4021-b7bb-f34d0f724595"><con:settings/><con:parameters><con:parameter><con:name>CONTENTID</con:name><con:value>CONTENTID</con:value><con:style>TEMPLATE</con:style><con:default>CONTENTID</con:default></con:parameter><con:parameter><con:name>LOCKTYPE</con:name><con:value>LOCKTYPE</con:value><con:style>TEMPLATE</con:style><con:default>LOCKTYPE</con:default></con:parameter><con:parameter><con:name>LOCKID</con:name><con:value>LOCKID</con:value><con:style>TEMPLATE</con:style><con:default>LOCKID</con:default></con:parameter></con:parameters><con:method name="RetrieveLock" id="5dc3ce71-5ddf-41d8-9088-084df77e1bba" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="8d4b177d-b3ee-4d96-a93f-51e234771161" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value=""/>
  <con:entry key="LOCKID" value=""/>
</con:parameters></con:request></con:method><con:method name="PostLock" id="2e6757f5-ed64-4d0a-8307-d6eecb453693" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>409</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4ea6820e-0706-4b3e-a355-224ac7b19821" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value=""/>
  <con:entry key="LOCKID" value=""/>
</con:parameters></con:request></con:method><con:method name="DeleteLock" id="8f45a47a-2ca6-4178-8a53-2a7f397fefde" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="ff6c899c-150c-47dc-a78f-9bd1b92f16a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value=""/>
  <con:entry key="LOCKID" value=""/>
</con:parameters></con:request></con:method></con:resource><con:resource name="person" path="/webservice/escenic/person/{PERSONID}" id="71d2bf22-a7db-4fe5-a2ad-7c48d1b8a04e"><con:settings/><con:parameters><con:parameter><con:name>PERSONID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Retrieve" id="90605e89-f787-4417-b332-aff85a8f99d3" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:request name="Request 1" id="0de689a0-ac81-46fe-82bb-106f26346f42" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>PERSONID</con:entry></con:parameterOrder></con:request></con:method><con:method name="Create" id="46207f87-372c-4af8-b90c-0577751010b6" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; type=entry</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="1d675b88-10fd-45db-bbc4-f890dfcb5927" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://host-ip-address/webservice/publication/qa/escenic/model/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Fred</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>Flintstone</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">Flintstone</title>
  <summary type="text">Fred Flintstone</summary>
  <metadata:publication href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Update" id="69b12134-1463-4a99-ba04-c268b401f8ca" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="2c5e2e8c-dfc5-4484-9cd8-6c2bfbb47d9e" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://host-ip-address/webservice/publication/qa/escenic/model/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Fred</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>Flintstone</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">Flintstone</title>
  <summary type="text">Fred Flintstone</summary>
  <metadata:publication href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete" id="af99c3d4-d1de-45dd-9380-6f8a8533e703" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>404 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="0015dc4b-d256-4bc0-8282-9c2241c2b54d" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="lists" path="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" id="fb8b7a7e-af23-4d09-b878-68f54ad247c7"><con:settings/><con:parameters><con:parameter><con:name>SECTION</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>PUBLICATIONID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Retrieve" id="01366378-298a-465f-919d-2da001e0caa0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>406 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xhtml+xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xhtml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="{ListPoolID}" path="/webservice/escenic/list-pool/{ListPoolID}" id="b0b4b4b7-0bfb-4bf2-9213-b07cf4d8bc06"><con:settings/><con:parameters><con:parameter><con:name>ListPoolID</con:name><con:value>ListPoolID</con:value><con:style>TEMPLATE</con:style><con:default>ListPoolID</con:default></con:parameter></con:parameters><con:method name="RetrieveListWithID" id="2cd1f162-130a-4827-9949-fa858dd3239e" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xhtml+xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xhtml+xml; qs=0.5</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:xht="http://www.w3.org/1999/xhtml">xht:html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400 406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xhtml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="InsertItems" id="5e6bcd71-6409-4820-bd4a-d6c820a15a40" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; qs=1</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>text/uri-list</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="handle" path="/webservice/escenic/list-pool/handle/{HANDLEID}" id="e81be7d1-927b-40b9-aa4f-1cd057fb76b6"><con:settings/><con:parameters><con:parameter><con:name>HANDLEID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="DeleteContentFromList" id="640b7fb6-0384-4c6d-81bf-f708cb9b46d1" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="f5490f2b-0c67-41cb-a347-6f2b827ea8a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="520" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>HANDLEID</con:entry></con:parameterOrder></con:request></con:method><con:method name="RetrieveContentFromList" id="60fdc71d-d0f2-4bd8-a80e-3ec817f7a95c" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:request name="Request 1" id="44ea2efc-9357-475e-9857-5d6ebf6eb71b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UpdateAHandleID" id="e27258c8-4038-4652-9ed3-51d245344e27" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/atom+xml</con:mediaType><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:entry</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="eaf41573-bc4e-4faa-adef-e04a7b89a252" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="type" value="entry"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Insert" id="1d6a986a-ad29-4a17-ae56-731a8293a1c8" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>text/uri-list</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=ISO-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml; qs=1</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:request name="Request 1" id="c6b91f20-3b3d-470e-88ad-01d90e723a76" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="section" path="/webservice/escenic/section/{SECTIONID}/inboxes" id="b684224d-2e76-406d-b534-efd330c14db3"><con:settings/><con:parameters><con:parameter><con:name>SECTIONID</con:name><con:value>RetrieveInboxes</con:value><con:style>TEMPLATE</con:style><con:default>RetrieveInboxes</con:default></con:parameter></con:parameters><con:method name="Method 1" id="f0fbdb6c-8820-490c-b094-41a7741eeb08" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/atom+xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:atom="http://www.w3.org/2005/Atom">atom:feed</con:element></con:representation><con:request name="Request 1" id="1bf3a92d-b352-42e3-b893-3b48bd0aed5a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SECTIONID" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SECTIONID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="presentationlayer" path="/incoming/{CREATIONDATE}/{TITLE}" id="8022f4c1-ecb7-42b7-ba54-5bfdc653dbed"><con:settings/><con:parameters><con:parameter><con:name>CREATIONDATE</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>TITLE</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="78799cfc-50f6-48b7-b6bf-c7f771fca864" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="dad62835-a805-4995-b49f-d36d691b646a" mediaType="application/json"><con:settings/><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CREATIONDATE</con:entry><con:entry>TITLE</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="d9e36d77-4764-48b1-9229-95a129bf7505" name="ScriptLibrary"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="20a39aae-42e7-480d-a139-89bc869ebee7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Library" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Utility" id="bd55c615-7786-4e18-95e7-b5ef864ba7fa"><con:settings/><con:config><script>class utility{
	def ETAG_At_Header(responseHeader)
	{
		def ETag = responseHeader["ETag"];
		def headers = new com.eviware.soapui.support.types.StringToStringMap();
		headers.put("If-Match",ETag[0]);
		return headers;
	}
	
	def GetContentID(responseHeader)
	{
		def Location = responseHeader["Location"];
		def len = Location[0].length();
		def start = len-4;
		def end = len-1;
		def contentID = Location[0][start..end];
		return contentID;
	}

	def GetETag(responseHeader)
	{
		def ETag = responseHeader["ETag"][0];
		def ETagValue = ETag[1..ETag.length()-2];
		return ETagValue;
	}

	def GetStatusCode(responseHeader)
	{
		def statusCode = responseHeader["#status#"];
		def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0];
		return httpStatusCode;
	}
	
	def GetPrivateLockID(responseHeader)
	{
		def lockUrl = responseHeader["Location"];
		int start = lockUrl[0].indexOf("private")+"private".length()+1
		int end = lockUrl[0].length()-1
		def privateLockID = lockUrl[0][start..end];
		return privateLockID;
	}

	def GetPublicLockID(holder)
	{
		def byteresponse = holder.getNodeValue("//*:entry//*:id");

		def start = byteresponse.indexOf("public")+"public".length()+1;
		def end = byteresponse.length()-1;
		def publicLock = byteresponse[start..end];
		return publicLock;
	}

	def GetTitleFromResponse(response)
	{
		def xml = new XmlParser().parseText(response);
		def root = xml.'content'.'vdf:payload'.'vdf:field';
		String title;
		for(int i=0;i&lt;root.size();i++)
		{
			if(root[i].@'name'=="title")
			{
				title = root[i].'vdf:value'[0].value()[0];
				break;
			}
		}
		title = title.replaceAll(" ","-");
		return title;
	}

	String GetNameServerName()
	{
		def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
		String nameServer = xml.'nameServer';
		return nameServer;
	}

	def GetAListIDFromResponse(response)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		
		def ListID = xml.'entry'.'id';
		def ID = ListID[0].value()[0];
		start = ID.indexOf("list")+"list/".length();
		end = ID.length()-1;
		ID = ID[start..end];
		return ID;
	}

	int GetNumberOfListItems(response)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def ID = xml.'entry'.'id';
		return ID.size();
	}

	def GetContentUrl(response)
	{
		def contentUrl = response["Location"];
		return contentUrl[0];
	}

	String GetAHandleIDOfList(response, int position)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def ID = xml.'entry'.'id';
		if(ID.size()>position)
		{
			def handleId = ID[position].value()[0];
			start = handleId.indexOf("handle")+"handle/".length();
			end = handleId.length()-1;
			handleId = handleId[start..end];
			return handleId;
		}
		return "";
	}

	int IsContenType(response,String search)
	{
		def contentType = response["Content-Type"];
		contentType = contentType[0];
		int index = contentType.indexOf(search);
		if(index>=0)
		return 1;
		else
		return 0;
	}

	int IsPinnedItem(response,int position)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def Items = xml.'entry'.'content';
		
		def ListItem = Items[position].'vdf:payload'.'vdf:field';
		def isPinned,priority;
		for(int i=0;i&lt;ListItem.size();i++)
		{
			if(ListItem[i].@name=="com.escenic.priority")
				priority =  ListItem[i].'vdf:value'[0].value()[0];
			if(ListItem[i].@name=="com.escenic.pinned")
				isPinned =  ListItem[i].'vdf:value'[0].value()[0];
		}
		if(isPinned=="true" &amp;&amp; priority>=0)
		return 1;
		else
		return 0;
	}
	
}

context.setProperty("utility",new utility());</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="bf1ef732-d491-474e-8a71-7662d30fffe2" name="TestReport"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1a28dcd3-af8e-459d-acec-07079412e16f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ReportGeneration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="ReportGeneration" id="d7cc8061-c4f5-4971-86d9-8f99d6922b1a"><con:settings/><con:config><script><![CDATA[import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

def designXml = '''
<Design>
    <ColumnHead>
        <Title>Time Of Execution</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Host Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Project Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Test Suite Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Test Case Name</Title>
    </ColumnHead>
	<ColumnHead>
        <Title>Test Step Name</Title>
    </ColumnHead>
	<ColumnHead>
        <Title>Assert Name</Title>
    </ColumnHead>
	<ColumnHead>
        <Title>Result</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Comment</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Expected Result</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Actual Result</Title>
    </ColumnHead>
</Design>
'''
def xml = new XmlSlurper().parseText(designXml);

def date = new Date()
def sdf = new SimpleDateFormat("dd-MM-yyyy")
String worksheet = sdf.format(date)

def root = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String reportFolder = root.'reportFolder';
String report = root.'reportfile';
//log.info reportFolder
def folder = new File(reportFolder);//( 'C:\\Users\\amnm\\Desktop\\TEST REPORT' )
if(!folder.exists())
{
	folder.mkdirs()
}
def sheet;
def settings;
def  workbook=null;
def found = 0;
def path = reportFolder+"\\\\"+report;//"C:\\Users\\amnm\\Desktop\\TEST REPORT\\Report.xls"
log.info reportFolder
log.info report
log.info path
File file = new File(folder,report);//(folder,'Report.xls')

WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12)
WritableCellFormat cellFormat = new WritableCellFormat(cellFont);
cellFormat.setBackground(Colour.GREEN);
cellFormat.setWrap(true);
cellFormat.setAlignment(jxl.format.Alignment.CENTRE)
cellFormat.setBorder(jxl.format.Border.ALL, jxl.format.BorderLineStyle.MEDIUM, jxl.format.Colour.BLACK);
int CellWidth = 30;

if(file.exists())
{
	workbook = Workbook.getWorkbook(file)
	for(int i=0;i<workbook.getNumberOfSheets();i++)
	{
		String name = workbook.getSheet(i).getName();
		if(name==worksheet)
		{
			found=1
			break;
		}
	}
	if(found==0)
	{
		int index = workbook.getNumberOfSheets()+1;
		def temp_copy = Workbook.createWorkbook(new File(folder,report),workbook)//(new File(folder,'Reports.xls'),workbook)
		sheet = temp_copy.createSheet(worksheet,0)//index

		/* *********This is where the value is saved for the next empty row index */
		WritableFont font = new WritableFont(WritableFont.TIMES, 12)
		font.setColour(Colour.WHITE)
		WritableCellFormat format = new WritableCellFormat(font);
		sheet.addCell(new Label(11,11,"1",format));
		for(int j=1;j<11;j++)
			sheet.setColumnView(j,CellWidth);
		xml.ColumnHead.Title.eachWithIndex{Title,row=0,
			col ->
			sheet.addCell(new Label(col,row,Title.text(),cellFormat))
		}

/* * ********This is where the value is retrieved from the cell of the next empty row index */
		Cell cell= sheet.getCell(11,11);
		def val=cell.getContents();
		val = val.toInteger();
		
		temp_copy.write();
		temp_copy.close();

		file.delete();
	     file = new File(folder,report);//(folder,'Reports.xls');
		file.renameTo(new File(folder,report));//(new File(folder,'Report.xls'))
	}
}
else
{
	workbook = Workbook.createWorkbook(file);
	sheet = workbook.createSheet(worksheet,0);

	/* *********This is where the value is saved for the next empty row index */
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	font.setColour(Colour.WHITE);
	WritableCellFormat format = new WritableCellFormat(font);
	sheet.addCell(new Label(11,11,"1",format));

	for(int j=1;j<11;j++)
		sheet.setColumnView(j,CellWidth);
		xml.ColumnHead.Title.eachWithIndex{Title,row=0,
			col ->
			sheet.addCell(new Label(col,row,Title.text(),cellFormat))
		}

	
	workbook.write();
	workbook.close();
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="TestPass" id="acc58fdd-003c-4702-9573-5ea013ce7b11"><con:settings/><con:config><script>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;


def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def root = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String HOST = root.'host';


def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;
format = createFormatCellStatus(1);
sheet.addCell(new Label(7,RowId,"PASS",format));
sheet.addCell(new Label(9,RowId,"200",format));
//sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format));
sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))


</script></con:config></con:testStep><con:testStep type="groovy" name="TestFail" id="85addb85-1790-4a8f-ba61-3dd76b00eab1"><con:settings/><con:config><script>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;


def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def root = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String HOST = root.'host';


def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;
format = createFormatCellStatus(2);
sheet.addCell(new Label(7,RowId,"FAIL",format));
sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))


</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="92c29fe5-3177-4ea1-ab8d-b0d9cf3213eb" name="ContentTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4de02d6c-3e8f-4abd-b231-f877af7508ac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ContentCreateGetDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="ab71f97f-e050-47e6-8857-38c4a8bb42ae"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="fefc8aa8-669f-41e9-8bfd-d3b0623105a5"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="dd10a963-921a-49f2-817b-48c078af1ab3" name="test"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetContentID" id="8fd29042-8bf0-4d10-81a9-e2550042216a"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);

context.testCase.testSteps["RetrieveAContent"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["UpdateAContent"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["UpdateAContentAgainWithoutModify"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["DeleteAContent"].setPropertyValue( "CONTENTID", contentID )

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAContent" id="b95c9127-aee7-4f03-9808-2be64a3951f9"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAContent" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e1799509-2d94-4dfe-b975-31b67af6f053" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3141" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="71fe0c30-0468-4101-9183-7d280593175f"><con:settings/><con:config><script>def response = context.expand( '${RetrieveAContent#Response}' )

response = response.replaceAll("This is test sample story body!","Update:This is test sample story body!")
response = response.replaceAll("This is a test story title","Update:This is a test story title")
context.testCase.testSteps["UpdateAContent"].setPropertyValue("Request",response)
context.testCase.testSteps["UpdateAContentAgainWithoutModify"].setPropertyValue("Request",response)</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="efa956a3-f61c-4ba5-8c1c-1ecd2045be33"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["UpdateAContent"].testRequest.setRequestHeaders(headers)
context.testCase.testSteps["UpdateAContentAgainWithoutModify"].testRequest.setRequestHeaders(headers)
//log.info "ETag Value: "+ETag[0]
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateAContent" id="c19d2312-fd5a-4ef7-9d12-52ac76d0977d"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateAContent" id="27e4f695-677c-4072-9d31-f2287069ebf7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;b55fe0b5&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/content/3141</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/content/3141" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/content/3141" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/article/3141/b55fe0b5" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>3141</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3141.html" rel="alternate"/>\r
   <app:edited>2016-06-15T04:36:28.000Z</app:edited>\r
   <updated>2016-06-15T04:36:28.000Z</updated>\r
   <published>2016-06-15T04:36:28.000Z</published>\r
   <dcterms:created>2016-06-15T04:36:28.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="86389188-f031-478e-9ca4-cf8794e9d166"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-eta:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>no</app:draft>\r
      <vaext:state name="published" href="http://qa-eta:8080/webservice/escenic/content/state/published/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-eta:8080/webservice/publication/qa/usage/article/3141" type="text/uri-list" title="Incoming Links"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-eta:8080/webservice/escenic/content/3141/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-eta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3141.html" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/note/note.html?url=http://qa-eta:8080/note-webservice/escenic/content/3141/notes" type="application/xhtml+xml" title="Notes"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3141/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3141/log" rel="http://www.vizrt.com/types/relation/log"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/2455</con:originalUri><con:assertion type="GroovyScriptAssertion" id="83b77a2d-7e36-4f8d-9f12-bdfbbce711d0" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["UpdateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3141" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateAContentAgainWithoutModify" id="840384a8-62b3-4222-be8e-75d645d031e9"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateAContentAgainWithoutModify" id="27e4f695-677c-4072-9d31-f2287069ebf7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;b55fe0b5&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/content/3141</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/content/3141" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/content/3141" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/article/3141/b55fe0b5" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>3141</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3141.html" rel="alternate"/>\r
   <app:edited>2016-06-15T04:36:28.000Z</app:edited>\r
   <updated>2016-06-15T04:36:28.000Z</updated>\r
   <published>2016-06-15T04:36:28.000Z</published>\r
   <dcterms:created>2016-06-15T04:36:28.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="86389188-f031-478e-9ca4-cf8794e9d166"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-eta:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>no</app:draft>\r
      <vaext:state name="published" href="http://qa-eta:8080/webservice/escenic/content/state/published/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-eta:8080/webservice/publication/qa/usage/article/3141" type="text/uri-list" title="Incoming Links"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-eta:8080/webservice/escenic/content/3141/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-eta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3141.html" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/note/note.html?url=http://qa-eta:8080/note-webservice/escenic/content/3141/notes" type="application/xhtml+xml" title="Notes"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3141/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3141/log" rel="http://www.vizrt.com/types/relation/log"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/2455</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5c6c9f8e-c690-45f7-88df-afef7f66948a" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["UpdateAContentAgainWithoutModify"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="412")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3141" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteAContent" id="44cc337d-2f0f-4c25-90fb-3bfee3317faf"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteAContent" id="c0c2a771-74e3-4d09-a61d-dd6070dae2f2" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ab7816a8-6689-4e97-b325-2090f552cce0" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3141" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DeleteANonExistContent" id="0f0514ad-af98-4e18-82a4-24be00ce2333"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);

int ID = contentID.toInteger()
ID = ID+1

contentID = ID.toString()
context.testCase.testSteps["DeleteNonExistContent"].setPropertyValue("CONTENTID",contentID)
</script></con:config></con:testStep><con:testStep type="restrequest" name="DeleteNonExistContent" id="bc16c369-5f0a-461d-89e7-47472480f00a"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteNonExistContent" id="c0c2a771-74e3-4d09-a61d-dd6070dae2f2" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c8627f3c-cd0c-4e50-9eae-02d92df0b3ce" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteNonExistContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="404")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3142" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="416d4344-f77e-4e48-ad9a-8c1246a450b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ChangingArticleChangeETag" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="f7bd7065-9be5-478a-9834-b238e632dd6a"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="94bc035d-89c3-4e24-9882-a23f4541e8e5"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetContentID" id="1501ce1e-174b-4a86-b9a6-59150d0e1666"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);

context.testCase.testSteps["RetrieveAContent"].setPropertyValue( "contentID", contentID )
context.testCase.testSteps["ChangeAContent"].setPropertyValue( "contentID", contentID )
context.testCase.testSteps["GetNewETag"].setPropertyValue( "contentID", contentID )</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAContent" id="d5ad37dd-a562-40f3-9dcd-42efda8a56ce"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAContent" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e1799509-2d94-4dfe-b975-31b67af6f053" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3143" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="d3675abc-0dc7-4f73-97aa-414bdeabc0a1"><con:settings/><con:config><script>def response = context.expand( '${RetrieveAContent#Response}' )

response = response.replaceAll("This is test sample story body!","Change:This is test sample story body!")
response = response.replaceAll("This is a test story title","Change:This is a test story title")
context.testCase.testSteps["ChangeAContent"].setPropertyValue("Request",response)
</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="6458e7cd-a336-491b-b517-bf70e8a2d177"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["ChangeAContent"].testRequest.setRequestHeaders(headers);

</script></con:config></con:testStep><con:testStep type="restrequest" name="ChangeAContent" id="12533a2d-623d-4d00-9c45-7b6a2683ed1b"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ChangeAContent" id="27e4f695-677c-4072-9d31-f2287069ebf7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;8eecd183&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/content/3143</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/content/3143" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/content/3143" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/article/3143/8eecd183" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>3143</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Change:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Change:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Change:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3143.html" rel="alternate"/>\r
   <app:edited>2016-06-15T04:36:32.000Z</app:edited>\r
   <updated>2016-06-15T04:36:32.000Z</updated>\r
   <published>2016-06-15T04:36:32.000Z</published>\r
   <dcterms:created>2016-06-15T04:36:32.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="30a82c1c-6e4e-497b-9693-7f2d21c7c94c"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-eta:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>no</app:draft>\r
      <vaext:state name="published" href="http://qa-eta:8080/webservice/escenic/content/state/published/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-eta:8080/webservice/publication/qa/usage/article/3143" type="text/uri-list" title="Incoming Links"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-eta:8080/webservice/escenic/content/3143/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-eta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3143.html" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/note/note.html?url=http://qa-eta:8080/note-webservice/escenic/content/3143/notes" type="application/xhtml+xml" title="Notes"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3143/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3143/log" rel="http://www.vizrt.com/types/relation/log"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/2455</con:originalUri><con:assertion type="GroovyScriptAssertion" id="83b77a2d-7e36-4f8d-9f12-bdfbbce711d0" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["ChangeAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3143" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetNewETag" id="9ed3901c-dda4-4f22-86ba-4aa7ce41c9d2"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetNewETag" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e1799509-2d94-4dfe-b975-31b67af6f053" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a7ec8aa3-3130-426d-b7bd-b868f878111a" name="IsETagChanged"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import com.eviware.soapui.support.types.StringToStringMap 
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */


def httpResponseHeader = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
def Old_ETag = httpResponseHeader["ETag"]

httpResponseHeader = context.testCase.testSteps["GetNewETag"].testRequest.response.responseHeaders
def New_ETag = httpResponseHeader["ETag"]

/* ****ASSERT STATUS CODE   ******** */

if(New_ETag!=Old_ETag)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeader==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"ETags should differ",format))
	sheet.addCell(new Label(10,RowId,"ETag is not changed after modifying article",format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"IsETagChanged",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3143" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0f150ef6-2cf2-4e54-91e2-a5ca1f0af53d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LockContent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="27cda8e6-4e68-41bb-a283-15d6f4c2994a"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="f1ff3298-f34e-42fa-bace-4cfeae2b6508"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetContentID" id="44be0643-ee93-4900-a15f-f2cd8cf85b65"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);

context.testCase.testSteps["RetrieveAContent"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["GetLock"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["GetLockAgain"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["PostLock"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["LockALockedContent"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["GetPrivatePublicLock"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["ReleaseALock"].setPropertyValue( "CONTENTID", contentID )
context.testCase.testSteps["ReleaseALockAgain"].setPropertyValue( "CONTENTID", contentID )

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAContent" id="20d49451-2684-48b8-80e9-76e6f6e057f3"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAContent" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e1799509-2d94-4dfe-b975-31b67af6f053" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetTheLockUrl" id="f8ac748d-60a7-4ebf-a086-e8591f2d08a5"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["RetrieveAContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def lockurl = context.utility.GetETag(httpResponseHeader);

context.testCase.testSteps["GetLock"].setPropertyValue("LOCKID",lockurl)
context.testCase.testSteps["GetLockAgain"].setPropertyValue("LOCKID",lockurl)
context.testCase.testSteps["PostLock"].setPropertyValue("LOCKID",lockurl)
context.testCase.testSteps["LockALockedContent"].setPropertyValue("LOCKID",lockurl)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GetLock" id="2fbb3888-b8e2-4e8e-8bef-5875dd137c86"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="RetrieveLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetLock" id="8d4b177d-b3ee-4d96-a93f-51e234771161" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463//75c57ca1</con:originalUri><con:assertion type="GroovyScriptAssertion" id="9921082f-a7a0-4455-bb9d-c543ee6ec64f" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["GetLock"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="b45fd57c"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PostLock" id="5673ed79-d7c6-4947-8add-a34864cab4a7"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="PostLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PostLock" id="4ea6820e-0706-4b3e-a355-224ac7b19821" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463//75c57ca1</con:originalUri><con:assertion type="GroovyScriptAssertion" id="edbddbd7-d903-4fde-9c16-9f1b80d649f0" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["PostLock"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="201")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="b45fd57c"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetLockAgain" id="d9132d94-6d8b-406a-bc1d-e8062f4c0841"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="RetrieveLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetLockAgain" id="8d4b177d-b3ee-4d96-a93f-51e234771161" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463//75c57ca1</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e8487172-9f17-4068-91d8-2af738a3459c" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["GetLockAgain"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="b45fd57c"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetPrivateAndPublicLock" id="c6ab07f7-39fa-4b5a-b955-61c1eb27b98d"><con:settings/><con:config><script>suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"]; 
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);  
def gutils = new com.eviware.soapui.support.GroovyUtils( context ); 
def response = context.testCase.testSteps["GetLockAgain"].getPropertyValue("response") 
def holder = gutils.getXmlHolder("$response");  
/*  * Get the Public Lock  */  
def publicLock = context.utility.GetPublicLockID(holder); 
log.info publicLock; 
/*  *Get the Private Lock   */ 
def httpHeaderResponse = context.testCase.testSteps["PostLock"].testRequest.response.responseHeaders 
def lockUrl = context.utility.GetPrivateLockID(httpHeaderResponse); 
log.info lockUrl   

context.testCase.testSteps["GetPrivatePublicLock"].setPropertyValue( "LOCKTYPE", "public" ) 
context.testCase.testSteps["GetPrivatePublicLock"].setPropertyValue( "LOCKID", publicLock )  
context.testCase.testSteps["ReleaseALock"].setPropertyValue( "LOCKTYPE", "public" ) 
context.testCase.testSteps["ReleaseALock"].setPropertyValue( "LOCKID", publicLock )  
context.testCase.testSteps["ReleaseALockAgain"].setPropertyValue( "LOCKTYPE", "public" ) 
context.testCase.testSteps["ReleaseALockAgain"].setPropertyValue( "LOCKID", publicLock ) //log.info privateLock  </script></con:config></con:testStep><con:testStep type="restrequest" name="LockALockedContent" id="b0b5e45e-b793-4cee-8177-fe448d751f74"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="PostLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LockALockedContent" id="4ea6820e-0706-4b3e-a355-224ac7b19821" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463//75c57ca1</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0d4771da-e0d7-4f96-ae5a-4bc2440efba8" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["LockALockedContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="409")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="409")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value=""/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="b45fd57c"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetPrivatePublicLock" id="b67e13b7-8a73-49d1-be12-4765706a4ed8"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="RetrieveLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetPrivatePublicLock" id="8d4b177d-b3ee-4d96-a93f-51e234771161" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463/public/d77d</con:originalUri><con:assertion type="GroovyScriptAssertion" id="200f9f36-a156-477f-b851-6134a0342c57" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["GetPrivatePublicLock"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ccfb74dd-5584-45ca-a632-b2a9fb4a19c0" name="Invalid HTTP Status Codes"><con:configuration><codes/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value="public"/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="17714"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ReleaseALock" id="e88e320c-e39e-4b9f-b12c-c727a76f1e31"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="DeleteLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ReleaseALock" id="ff6c899c-150c-47dc-a78f-9bd1b92f16a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463/public/d77d</con:originalUri><con:assertion type="GroovyScriptAssertion" id="abf888a0-2c4f-46f1-95c7-b6fea41d1fcd" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["ReleaseALock"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
*/
/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="204")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value="public"/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="17714"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ReleaseALockAgain" id="6f0b0695-6139-4821-80ae-5ba5b8efe92e"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/lock/article/{CONTENTID}/{LOCKTYPE}/{LOCKID}" methodName="DeleteLock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ReleaseALockAgain" id="ff6c899c-150c-47dc-a78f-9bd1b92f16a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lock/article/2463/public/d77d</con:originalUri><con:assertion type="GroovyScriptAssertion" id="abf888a0-2c4f-46f1-95c7-b6fea41d1fcd" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["ReleaseALockAgain"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="404")
	log.info "PASS"
else
	log.info "FAIL"
*/
/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="404")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="LOCKTYPE" value="public"/>
  <con:entry key="CONTENTID" value="3145"/>
  <con:entry key="LOCKID" value="17714"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b6a0190a-9f20-41b3-bf44-c96cfd3ee49f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestStaleCache" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="a770ae22-2d3f-49b7-ab0c-b54a93ed2a40"><con:settings/><con:config><script>//String suitename = context.testCase.testSuite.name;
//String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="RunTheSteps" id="ddec4e34-385b-4d33-92d2-d81f390fc3ae"><con:settings/><con:config><script>/*
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

for(int i=0;i&lt;5;i++)
{
	
	testRunner.runTestStep(context.testCase.testSteps["CreateArticle"])
	testRunner.runTestStep(context.testCase.testSteps["Groovy Script"])
	testRunner.runTestStep(context.testCase.testSteps["Delay"])
	testRunner.runTestStep(context.testCase.testSteps["RetrieveFrmWBSrvic"])
	testRunner.runTestStep(context.testCase.testSteps["RetriveFromPrsntLayr"])
	testRunner.runTestStep(context.testCase.testSteps["SetETagUpdateArticle"])
	testRunner.runTestStep(context.testCase.testSteps["UpdateArticle"])
	testRunner.runTestStep(context.testCase.testSteps["Delay2"])
	testRunner.runTestStep(context.testCase.testSteps["RtrvFromPrsntLayrUpdt"])
}
*/</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateArticle" id="f2fe91c6-02a6-438f-b5e3-6525c97f0d33"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateArticle" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetProperties" id="78d2b337-a6df-45a6-86df-22525f6955f4"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

int start,end;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

String GetDate()
{
	Date Now = new Date();
	def simpledateformat = new SimpleDateFormat("yyyy-MM-dd");
	String UrlDate = simpledateformat.format(Now);
	return UrlDate;
}

void ChangeServerName()
{
	def endpoint = context.testCase.testSteps["RetriveFromPrsntLayr"].getPropertyValue("Endpoint");
	def servername;
	if(endpoint.indexOf(":8080")>=0)//endpint contains the name 'qa-server:8080 type'
	{
		context.testCase.testSteps["RetriveFromPrsntLayr"].setPropertyValue("Endpoint",context.utility.GetNameServerName());
	}
	def endpoint2
	endpoint2 = context.testCase.testSteps["RtrvFromPrsntLayrUpdt"].getPropertyValue("Endpoint");
	if(endpoint2.indexOf(":8080")>=0)
	{
		context.testCase.testSteps["RtrvFromPrsntLayrUpdt"].setPropertyValue("Endpoint",context.utility.GetNameServerName());
	}
}

//log.info context.utility.GetNameServerName();
def httpResponseHeader = context.testCase.testSteps["CreateArticle"].testRequest.response.responseHeaders;
def response = context.testCase.testSteps["CreateArticle"].getPropertyValue("Request");

String ArticleID = context.utility.GetContentID(httpResponseHeader);

context.testCase.testSteps["RetriveFromPrsntLayr"].setPropertyValue("CREATIONDATE",GetDate());
context.testCase.testSteps["RtrvFromPrsntLayrUpdt"].setPropertyValue("CREATIONDATE",GetDate());

ChangeServerName();
String Title = context.utility.GetTitleFromResponse(response)+"-"+ArticleID+".html";
context.testCase.testSteps["RetrieveFrmWBSrvic"].setPropertyValue("CONTENTID",ArticleID);
context.testCase.testSteps["RetrieveFrmWBSrvicUpdt"].setPropertyValue("CONTENTID",ArticleID);
context.testCase.testSteps["UpdateArticle"].setPropertyValue("CONTENTID",ArticleID);
context.testCase.testSteps["RetriveFromPrsntLayr"].setPropertyValue("TITLE",Title);

Title = "First-Update"+Title;
context.testCase.testSteps["RtrvFromPrsntLayrUpdt"].setPropertyValue("TITLE",Title);
context.testCase.testSteps["RtrvFromPrsntLayrUpdt"].setPropertyValue("CONTENTID",ArticleID);
//log.info Title;</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f586b183-fc4d-4f4a-9cfd-fd0fc8b99c96"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveFrmWBSrvic" id="555eb644-cb13-455b-bffb-17583add6c31"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveFrmWBSrvic" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3146" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetriveFromPrsntLayr" id="634fa44d-b838-446c-85c8-2085c5d6eaaa"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/incoming/{CREATIONDATE}/{TITLE}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetriveFromPrsntLayr" id="dad62835-a805-4995-b49f-d36d691b646a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://eta.qa.local</con:endpoint><con:request/><con:originalUri>http://eta.qa.local/incoming/2016-06-08/This-is-a-test-story-title-2937.html</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="CREATIONDATE" value="2016-06-15"/>
  <con:entry key="TITLE" value="This-is-a-test-story-title-3146.html"/>
</con:parameters><con:parameterOrder><con:entry>CREATIONDATE</con:entry><con:entry>TITLE</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetETagUpdateArticle" id="94802287-bbd4-4f88-be87-6f6b07faaee9"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.types.StringToStringMap;

void SetETag()
{
	def httpresponseHeaders = context.testCase.testSteps["RetrieveFrmWBSrvic"].testRequest.response.responseHeaders;
	def ETAG = httpresponseHeaders["ETag"][0];
	
	def header = new StringToStringMap();
	header.put("If-Match",ETAG);
	context.testCase.testSteps["UpdateArticle"].testRequest.setRequestHeaders(header);
}

void updateArticle()
{
	def response = context.expand('${RetrieveFrmWBSrvic#Response}');
	response = response.replaceAll("<vdf:value>This is a test story title</vdf:value>", "<vdf:value>First Update:This is a test story title</vdf:value>");
	response = response.replaceAll("></vaext:state>",">published</vaext:state>");
	if( response.indexOf("</vaext:state>")<0 )
	{
		def server = context.testCase.testSteps["RetrieveFrmWBSrvic"].getPropertyValue("Endpoint");
		def replaceString = "<vaext:state name=\"published\" href=\""+server+"/webservice/escenic/content/state/published/editor\"/>";
		int len = replaceString.length();
		def newString = replaceString[0..len-3];
		newString = newString+">published</vaext:state>";
		response = response.replaceAll(replaceString,newString);
	}
	context.testCase.testSteps["UpdateArticle"].setPropertyValue("Request",response.toString());
}
SetETag();
updateArticle();]]></script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateArticle" id="c7a9cccc-e0f0-41c7-aac2-c374f8d3de75"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateArticle" id="27e4f695-677c-4072-9d31-f2287069ebf7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;a0dd7bc4&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/content/3146</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/content/3146" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/content/3146" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/article/3146/a0dd7bc4" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>3146</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>First Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3146.html" rel="alternate"/>\r
   <app:edited>2016-06-15T04:36:43.000Z</app:edited>\r
   <updated>2016-06-15T04:36:43.000Z</updated>\r
   <published>2016-06-15T04:36:43.000Z</published>\r
   <dcterms:created>2016-06-15T04:36:43.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="07768b80-ae83-44f5-854e-3bcb84b6a855"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-eta:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>no</app:draft>\r
      <vaext:state name="published" href="http://qa-eta:8080/webservice/escenic/content/state/published/editor">published</vaext:state>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-eta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-eta:8080/webservice/publication/qa/usage/article/3146" type="text/uri-list" title="Incoming Links"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-eta:8080/webservice/escenic/content/3146/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-eta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://eta.qa.local/incoming/2016-06-15/This-is-a-test-story-title-3146.html" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-eta:8080/webservice-extensions/note/note.html?url=http://qa-eta:8080/note-webservice/escenic/content/3146/notes" type="application/xhtml+xml" title="Notes"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3146/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/content/3146/log" rel="http://www.vizrt.com/types/relation/log"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/2941</con:originalUri><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3146" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay2" id="76ff8803-88e9-4fc1-a34f-2509150de73a"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveFrmWBSrvicUpdt" id="10713f09-543e-4609-9b3e-68ac6ba13178"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveFrmWBSrvicUpdt" id="95f42df0-88fa-4790-bfad-cfd4a9c24cd1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/content/100</con:originalUri><con:assertion type="GroovyScriptAssertion" id="de75c2a2-9878-4022-ae6d-541d979a4a47" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${RetrieveFrmWBSrvicUpdt#Response}');
def xml = new XmlParser().parseText(response);
def root = xml.'content'.'vdf:payload'.'vdf:field'
String title;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i]["@name"]=="title")
	{
		title = root[i].'vdf:value'[0].value()[0];
		break;
	}
}
if(title=="First Update:This is a test story title")
log.info "PASS"
else
log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="CONTENTID" value="3146" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RtrvFromPrsntLayrUpdt" id="502ee34c-0888-45e2-84ed-048dd63d10aa"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/incoming/{CREATIONDATE}/{TITLE}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RtrvFromPrsntLayrUpdt" id="dad62835-a805-4995-b49f-d36d691b646a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://eta.qa.local</con:endpoint><con:request/><con:originalUri>http://eta.qa.local/incoming/2016-06-08/This-is-a-test-story-title-2937.html</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b0763f58-0167-4f29-9641-da986d2531bf" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${RtrvFromPrsntLayrUpdt#Response}');
int index = response.indexOf("&lt;title>First Update:This is a test story title -");

if(index>=0)
log.info  "PASS"
else
log.info  "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="CREATIONDATE" value="2016-06-15"/>
  <con:entry key="TITLE" value="First-UpdateThis-is-a-test-story-title-3146.html"/>
</con:parameters><con:parameterOrder><con:entry>CREATIONDATE</con:entry><con:entry>TITLE</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="160a2e89-63a7-4901-857a-0990cdf06027"><con:settings/><con:config><script>def url = context.expand('${#Project#Name}');
log.info url</script></con:config></con:testStep><con:loadTest id="dff48084-b9c1-431b-9294-55d1c37dc78f" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="c96a42c7-a15f-4d06-8556-232010c4af95" name="TagTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="48e429fe-b85e-42c8-bdac-a5dd04843d15" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WebServiceTagRetrieve" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="RetrieveTagHierarchy" id="e89be1e1-430d-4517-8446-d043efd2ce60"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c0f2269d-d902-487d-bf46-8143286efa9c" name="RetrieveTagHierarchy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="114ce01e-131b-4015-a2f0-c03582c46a71" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeader = context.testCase.testSteps["RetrieveTagHierarchy"].testRequest.response.responseHeaders
def statusCode = httpResponseHeader["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

log.info httpStatusCode
if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveConceptTag" id="5701ae5d-ac5b-4714-ad2a-bdf677ebcd63"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4de30ee3-7bc5-465b-87a2-633ed1e8fbcc" name="RetrieveConceptTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5bf10200-d648-4078-83e0-ababce932c0f" name="Script Assertion"><con:configuration><scriptText>/*def httpHeaderResponse = context.testCase.testSteps["RetrieveConceptTag"].testRequest.response.responseHeaders
def statusCode = httpHeaderResponse["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveEntityTag" id="5f7aef0a-d7f1-41f5-8667-f359876bf8d1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e2178f06-d7c9-4b8e-911b-09b6a97b2793" name="RetrieveEntityTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9c559573-3f5d-4a5f-a5c7-df4ad1485eec" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveEntityTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveLocationTag" id="754846ab-4148-4dc2-9714-a272130c9f6c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="42352bd0-2e0e-4d40-b7b4-3a222ca315fc" name="RetrieveLocationTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b128362e-3c11-4df9-a9db-239a8972b192" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveLocationTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveOrganizationTag" id="8837ac6b-c1a4-4d4f-a2b7-409c9281cca1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4e31f8b9-c188-45a8-af0a-8826e31f49a5" name="RetrieveOrganizationTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="31735365-df24-45a3-baa2-9c19cbd52698" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveOrganizationTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrievePersonTag" id="a246395d-3547-4860-8846-e3e8e91a0fe9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="72c10ac3-0974-46f7-bd45-f4f9d94b5c14" name="RetrievePersonTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="a299f1f4-cf8f-43e4-8f1a-144fe721b7e6" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrievePersonTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveUnknownTag" id="2d6b2e03-c862-47bf-b73f-2d189d23757f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="449a9158-6b91-417b-8f8a-9ee2d020d830" name="RetrieveUnknownTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="009f8f44-ff77-4a5f-8035-96e28da19a8d" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveUnknownTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetrieveWidgetTag" id="23647015-b976-489e-a3f7-445e890808f5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="73221e49-fbb9-4284-ac4c-d636dd30eb78" name="RetrieveWidgetTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e751aa1e-770c-4f30-8b83-d330d766404a" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveWidgetTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchDescriptionOfTag" id="88c275f2-8136-4783-ad34-4bbfe4b7b471"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="54a3bb43-dde6-4a78-b676-1a4f9a91c216" name="SearchDescriptionOfTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e0a6b2f1-ac9b-4e8d-8c72-2ca38015eb0a" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["SearchDescriptionOfTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchATagBasedOnTagTitle" id="bc74737d-f81a-437e-9644-c7f958b19918"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ce9c95ff-2f24-4bbb-906e-2692d367efa9" name="SearchATagBasedOnTagTitle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.28.68.207:8080/webservice/escenic/classification/tag/search?searchterms=$searchterm</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e3cf37ef-4b98-4e2b-8ec7-6478a04f9d7d" name="Script Assertion"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["SearchATagBasedOnTagTitle"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:loadTest id="5e9197e6-2dd3-4f56-9cb3-405629f65817" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>4</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>100</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="33675429-b314-452a-880b-e7bf280b6c9b" name="PersonTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9b55975c-8063-44df-84dc-9ce7a33c7614" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateRetrieveDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="dfefa3e5-adfc-4651-bb85-3611c16bdb69"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrievePerson" id="f8f834e9-3390-431a-8367-cfe55d2fbcc1"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrievePerson" id="0de689a0-ac81-46fe-82bb-106f26346f42" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="3863eead-92ee-4ca7-b7c0-960b6d3d38ca" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrievePerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>PERSONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="EditPerson" id="5d72c802-40a2-415f-90d4-b81018fbc82f"><con:settings/><con:config><script>def endpoint = testRunner.testCase.testSteps["CreateAPerson"].getPropertyValue("endpoint")
def request =  context.expand('${CreateAPerson#Request}')
request = request.replaceAll("http://host-ip-address",endpoint)
testRunner.testCase.testSteps["CreateAPerson"].setPropertyValue("Request",request)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAPerson" id="dca77058-6528-438b-b6d5-e8a793cf7155"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAPerson" id="1d675b88-10fd-45db-bbc4-f890dfcb5927" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Fred</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>Flintstone</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">Flintstone</title>
  <summary type="text">Fred Flintstone</summary>
  <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="test"/>
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="728b656d-f4f2-4e4c-a400-7627555c511f" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetPersonID" id="bc39633c-9716-4d89-9f49-593035861367"><con:settings/><con:config><script>def httpresponse = context.testCase.testSteps["CreateAPerson"].testRequest.response.responseHeaders
def link = httpresponse["Location"]
def start = link[0].indexOf("person")+"person/".length()
def end = link[0].length()-1
def personID = link[0][start..end]

context.testCase.testSteps["RetrieveAPerson"].setPropertyValue("PERSONID",personID)
context.testCase.testSteps["DeleteAPerson"].setPropertyValue("PERSONID",personID)
context.testCase.testSteps["DeleteSamePersonAgain"].setPropertyValue("PERSONID",personID)
context.testCase.testSteps["DeleteNonExistPerson"].setPropertyValue("PERSONID",personID+1)</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAPerson" id="69f9aa7f-5d40-443a-875d-100ae54e55eb"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAPerson" id="0de689a0-ac81-46fe-82bb-106f26346f42" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="673057fe-d0f3-4fbf-b1bb-a50e30562548" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="31" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>PERSONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteAPerson" id="8ff2b1c6-a80a-4304-8558-eed5c55b36b8"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteAPerson" id="0015dc4b-d256-4bc0-8282-9c2241c2b54d" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/19</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0bbb1c80-d76e-4f81-9275-747114c0046f" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="31" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteSamePersonAgain" id="1e3df2c9-c9e3-46b5-a64f-21d6f8de852c"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteSamePersonAgain" id="0015dc4b-d256-4bc0-8282-9c2241c2b54d" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/19</con:originalUri><con:assertion type="GroovyScriptAssertion" id="eb29352b-1ec3-4cea-9ce2-d89740631253" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteSamePersonAgain"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="404")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="31" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteNonExistPerson" id="65f88dde-e97b-47fd-a699-062490c547a5"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteNonExistPerson" id="0015dc4b-d256-4bc0-8282-9c2241c2b54d" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="222e1682-8aaf-47d0-b10f-aab870507bc3" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteNonExistPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="404")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="311" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="604424a7-5d1a-4079-be1d-0ca2a34d5b9a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ChangeAPerson" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="95583c04-72d4-4f1a-8fc3-1694396d6ba8"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="EditPerson" id="d53b76ec-3933-4dbd-9297-062d070d9666"><con:settings/><con:config><script>def endpoint = testRunner.testCase.testSteps["CreateAPerson"].getPropertyValue("endpoint")
def request =  context.expand('${CreateAPerson#Request}')
request = request.replaceAll("http://host-ip-address",endpoint)
testRunner.testCase.testSteps["CreateAPerson"].setPropertyValue("Request",request)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAPerson" id="c348d961-2290-4b1e-ba0e-7b955b428650"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAPerson" id="1d675b88-10fd-45db-bbc4-f890dfcb5927" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Fred</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>Flintstone</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">Flintstone</title>
  <summary type="text">Fred Flintstone</summary>
  <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="test"/>
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="728b656d-f4f2-4e4c-a400-7627555c511f" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetPersonID" id="a1cc0094-29fa-4faa-a970-fe8a13718230"><con:settings/><con:config><script>def httpresponse = context.testCase.testSteps["CreateAPerson"].testRequest.response.responseHeaders
def link = httpresponse["Location"]
def start = link[0].indexOf("person")+"person/".length()
def end = link[0].length()-1
def personID = link[0][start..end]

context.testCase.testSteps["RetrieveAPerson"].setPropertyValue("PERSONID",personID)
context.testCase.testSteps["UpdateAPerson"].setPropertyValue("PERSONID",personID)
context.testCase.testSteps["UpdateSamePersonAgain"].setPropertyValue("PERSONID",personID)</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAPerson" id="ac91e873-f9cb-4bd9-8c95-0c615455b668"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAPerson" id="0de689a0-ac81-46fe-82bb-106f26346f42" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="673057fe-d0f3-4fbf-b1bb-a50e30562548" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="32" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>PERSONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="EditPersonProperties" id="29c94115-fb1e-40db-8e09-1a5122023456"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${RetrieveAPerson#Response}')
response = response.replaceAll("&lt;vdf:field name=\"com.escenic.occupation\"/>" , "&lt;vdf:field name=\"com.escenic.occupation\">Software Engineer&lt;/vdf:field>")
context.testCase.testSteps["UpdateAPerson"].setPropertyValue("Request",response)

def httpHeader = context.testCase.testSteps["RetrieveAPerson"].testRequest.response.responseHeaders
def ETag = httpHeader["ETag"][0]

def header = new StringToStringMap()
header.put("If-Match",ETag)
context.testCase.testSteps["UpdateAPerson"].testRequest.setRequestHeaders(header)
context.testCase.testSteps["UpdateSamePersonAgain"].testRequest.setRequestHeaders(header)
</script></con:config></con:testStep><con:testStep type="restrequest" name="UpdateAPerson" id="528821e3-0555-49e9-a8e6-9f7ce16ff818"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateAPerson" id="2c5e2e8c-dfc5-4484-9cd8-6c2bfbb47d9e" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;8d4e4986-fcd6-44cc-9a17-88a5fffcd49c&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/person/32</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/person/32" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/person/32" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/person/32/8d4e4986-fcd6-44cc-9a17-88a5fffcd49c" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>32</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.person" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.username"/>\r
         <vdf:field name="com.escenic.firstName">\r
            <vdf:value>Fred</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.surName">\r
            <vdf:value>Flintstone</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.occupation">Software Engineer</vdf:field>\r
         <vdf:field name="com.escenic.address"/>\r
         <vdf:field name="com.escenic.postalCode"/>\r
         <vdf:field name="com.escenic.city"/>\r
         <vdf:field name="com.escenic.phoneWork"/>\r
         <vdf:field name="com.escenic.phoneMobile"/>\r
         <vdf:field name="com.escenic.phonePrivate"/>\r
         <vdf:field name="com.escenic.emailAddress"/>\r
         <vdf:field name="com.escenic.description"/>\r
      </vdf:payload>\r
   </content>\r
   <app:edited>2016-06-15T04:37:12.000Z</app:edited>\r
   <updated>2016-06-15T04:37:12.000Z</updated>\r
   <published>2016-06-15T04:37:12.000Z</published>\r
   <dcterms:created>2016-06-15T04:37:12.000Z</dcterms:created>\r
   <title type="text">Flintstone</title>\r
   <summary type="text">Fred Flintstone</summary>\r
   <metadata:reference source="ece-auto-gen" sourceid="301a256e-44e5-4751-abd1-deec5ce58a1c"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="724b6b46-4f03-4674-831e-3685dd815ec3" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["UpdateAPerson"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="32" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateSamePersonAgain" id="feb28c91-cf9a-49f0-bd18-c2e8b11a34b6"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/person/{PERSONID}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateSamePersonAgain" id="2c5e2e8c-dfc5-4484-9cd8-6c2bfbb47d9e" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;8d4e4986-fcd6-44cc-9a17-88a5fffcd49c&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-eta:8080/webservice/escenic/person/21</id>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/person/21" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/person/21" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-eta:8080/webservice/escenic/lock/person/21/59c1895b-bf3f-41ae-b1d9-d33f7e18fdfb" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>21</dcterms:identifier>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-eta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-eta:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.person" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.username"/>\r
         <vdf:field name="com.escenic.firstName">\r
            <vdf:value>Fred</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.surName">\r
            <vdf:value>Flintstone</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.occupation">Software Engineer</vdf:field>\r
         <vdf:field name="com.escenic.address"/>\r
         <vdf:field name="com.escenic.postalCode"/>\r
         <vdf:field name="com.escenic.city"/>\r
         <vdf:field name="com.escenic.phoneWork"/>\r
         <vdf:field name="com.escenic.phoneMobile"/>\r
         <vdf:field name="com.escenic.phonePrivate"/>\r
         <vdf:field name="com.escenic.emailAddress"/>\r
         <vdf:field name="com.escenic.description"/>\r
      </vdf:payload>\r
   </content>\r
   <app:edited>2016-05-26T09:00:32.000Z</app:edited>\r
   <updated>2016-05-26T09:00:32.000Z</updated>\r
   <published>2016-05-26T09:00:32.000Z</published>\r
   <dcterms:created>2016-05-26T09:00:32.000Z</dcterms:created>\r
   <title type="text">Flintstone</title>\r
   <summary type="text">Fred Flintstone</summary>\r
   <metadata:reference source="ece-auto-gen" sourceid="e567fb3f-8984-4e4e-a73b-e532669d6f47"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/person/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="724b6b46-4f03-4674-831e-3685dd815ec3" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["UpdateSamePersonAgain"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="412")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PERSONID" value="32" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="743522f3-c637-4c7d-901c-5bf88c47542d" name="ListTests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0d1a4ae3-b73e-4a97-85b7-af2b492dc591" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestLinkTypeReturns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="c327cfe5-db00-4ca7-91a8-d5e04e55246f"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="SetServerName" id="9c163268-1096-46ac-bee1-f094c6ab2bc6"><con:settings/><con:config><script>
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';
context.testCase.testSteps["RetrieveListPoolID"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveListPoolID"].setPropertyValue("Username",user);
context.testCase.testSteps["RetrieveListPoolID"].setPropertyValue("Password",password);

context.testCase.testSteps["RetrieveAllLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveAllLists"].setPropertyValue("Username",user);
context.testCase.testSteps["RetrieveAllLists"].setPropertyValue("Password",password);

context.testCase.testSteps["RetrieveInbox"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveInbox"].setPropertyValue("Username",user);
context.testCase.testSteps["RetrieveInbox"].setPropertyValue("Password",password);
log.info user
log.info password</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAllLists" id="71451b8d-3e6a-42d7-b995-eaac1f9043cb"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAllLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5130233f-ae8f-4d5e-bd0a-d38e88214da6" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetSetListID" id="4850d9ea-3bb3-4ae8-9468-1857d62daea5"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToStringMap

def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def response = context.expand('${RetrieveAllLists#Response}')

root = new XmlParser().parseText(response)
def ArrayID = root.'entry'.'id'
def listId
def ID = new String[1000]

for(int i=0;i&lt;ArrayID.size();i++)
{
	listId = ArrayID[i].value()[0]
	startIndex = listId.indexOf("list")+"list/".length()
	endIndex = listId.length()-1
	ID[i] = listId[startIndex..endIndex]
}

new_header = new StringToStringMap()
new_header.put("Accept","application/atom+xml")
new_header.put("Content-Type","application/atom+xml")
testRunner.testCase.getTestStepByName("RetrieveListPoolID").testRequest.setRequestHeaders(new_header);
context.testCase.testSteps["RetrieveListPoolID"].setPropertyValue("ListPoolID",ID[0])

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveListPoolID" id="5edc974b-b680-4a52-9ed2-e4dd995c82c4"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveListPoolID" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep=context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertLinkTypeForList"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def response = context.expand('${RetrieveListPoolID#Response}')

root = new XmlSlurper().parseText(response);
def node = root.'link'
int FAIL=0;
for(int i=0;i&lt;node.size();i++)
{
	linktype = node[i]["@type"];
	if(linktype=="application/xhtml+xml")
	{
		FAIL=1;
		break;
	}
}

def node2 = root.'entry'.'link';
log.info node2.size()
for(int i=0;i&lt;node2.size();i++)
{
	if(node2[i]["@type"]!="application/atom+xml")
	{
		FAIL=1;
		break;
	}
}
/* ****ASSERT STATUS CODE   ******** */

if(FAIL==0)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	sheet.addCell(new Label(9,RowId,"application/atom+xml",format))
	sheet.addCell(new Label(10,RowId,linktype.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertLinkTypeForList",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="142" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetSectionID" id="1d9cd510-4f45-4e57-a7de-58e0a8540cce"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
context.testCase.testSteps["RetrieveInbox"].setPropertyValue("SECTIONID","1");


</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveInbox" id="e72be119-c9ac-4dce-aa31-0af9e300c82d"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/section/{SECTIONID}/inboxes" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveInbox" id="1bf3a92d-b352-42e3-b893-3b48bd0aed5a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/section/1/inboxes</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fb1aad50-88d2-4ded-b541-1deb676ba8b3" name="AssertLinkTypeForInbox"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def response = context.expand('${RetrieveInbox#Response}')
root = new XmlSlurper().parseText(response);
def node = root.'link'
int FAIL=0;
for(int i=0;i&lt;node.size();i++)
{
	linktype = node[i]["@type"];
	if(linktype=="application/xhtml+xml")
	{
		FAIL=1;
		break;
	}
}

def node2 = root.'entry'.'link';
for(int i=0;i&lt;node2.size();i++)
{
	if(node2[i]["@rel"][0]=="http://www.vizrt.com/types/relation/list-pool")
	{
		if(node2[i]["@type"]=="application/xhtml+xml")
		{
			linktype="application/xhtml+xml";
			FAIL=1;
			break
		}
	}
	if(node2[i]["@rel"][0]=="http://www.vizrt.com/types/relation/changelog")
	{
		if(node2[i]["@type"]=="application/xhtml+xml")
		{
			linktype="application/xhtml+xml";
			FAIL=1;
			break;
		}
	}
}
/* ****ASSERT STATUS CODE   ******** */

if(FAIL==0)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	sheet.addCell(new Label(9,RowId,"application/atom+xml",format))
	sheet.addCell(new Label(10,RowId,linktype.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertLinkTypeForInbox",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SECTIONID" value="1" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SECTIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="24e85312-7c65-432b-ac60-7b7bcd05df0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListEditRetrieve" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="9a8595b3-0380-4b22-84a9-42fe7335bf11"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAllLists" id="5b8af256-8617-47d3-b1fd-97feb9427051"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAllLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5130233f-ae8f-4d5e-bd0a-d38e88214da6" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ExtractListPoolID" id="3ed91e71-4d80-4e9b-bddd-8f5d4e492f18"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def gutils = new com.eviware.soapui.support.GroovyUtils(context)
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")

String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def response = context.expand('${RetrieveAllLists#Response}')

// ****  Extracting List Pool ID ********** //
def project = testRunner.testCase.testSuite.project
root = new XmlParser().parseText(response)
def ArrayID = root.'entry'.'id'
def listId
def ID = new String[1000]

for(int i=0;i&lt;ArrayID.size();i++)
{
	listId = ArrayID[i].value()[0]
	startIndex = listId.indexOf("list")+"list/".length()
	endIndex = listId.length()-1
	ID[i] = listId[startIndex..endIndex]
}

new_header = new StringToStringMap()

/* TEST FOR TWO DIFFERENT TYPES OF HEADERS ATOM+XML AND XHTML+XML  TYPE*/
//for(int i=0;i&lt;ArrayID.size();i++)
//{
	context.testCase.testSteps["RetrieveListWithPoolIdForDiffHeader"].setPropertyValue("ListPoolID",ID[0])
	context.testCase.testSteps["RetrieveListWithPoolIdForHeader2"].setPropertyValue("ListPoolID",ID[0])
	
	new_header.put("Accept","application/xhtml+xml")
	new_header.put("Content-Type","application/xhtml+xml")
	testRunner.testCase.getTestStepByName("RetrieveListWithPoolIdForDiffHeader").testRequest.setRequestHeaders(new_header);
	//testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['RetrieveListWithPoolIdForDiffHeader'])
	
	new_header.put("Accept","application/atom+xml")
	new_header.put("Content-Type","application/atom+xml")
	testRunner.testCase.getTestStepByName("RetrieveListWithPoolIdForHeader2").testRequest.setRequestHeaders(new_header);
	//testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['RetrieveListWithPoolIdForDiffHeader'])
//}


/* SET LIST_POOLID AT THE TEST STEPS */
context.testCase.testSteps["AddContentItems"].setPropertyValue("ListPoolID",ID[0]);
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveListWithPoolIdForDiffHeader" id="a7c7f147-8de0-4820-8a1c-1b5b2e05ae8c"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveListWithPoolIdForDiffHeader" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xhtml+xml"/>
  &lt;con:entry key="Content-Type" value="application/xhtml+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.testCase.getTestStepByName("RetrieveListWithPoolIdForDiffHeader").getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;
def teststep = context.getCurrentStep().getLabel();
/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders//context.getCurrentStep().getLabel()
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(8,RowId,"applicatiom/xhtml+xml is obsolete",format))
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>/*
def httpHeaderResponse = context.testCase.testSteps["RetrieveListWithPoolId"].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
contentType = contentType[0..index]
def header = context.testCase.testSteps["RetrieveListWithPoolId"].getHttpRequest().getRequestHeaders()
header = header["Content-Type"][0]

if(header==contentType)
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.testCase.getTestStepByName("RetrieveListWithPoolIdForDiffHeader").getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;
def teststep = context.getCurrentStep().getLabel();
/* ****ASSERT CONTENT-TYPE MATCH   ******** */
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders//context.getCurrentStep().getLabel()
def assert_response_contentType = httpResponseHeaders["Content-Type"][0]
log.info assert_response_contentType
def assert_request_header = context.testCase.testSteps["RetrieveListWithPoolIdForDiffHeader"].getHttpRequest().getRequestHeaders();
def assert_request_header_content_type = assert_request_header["Content-Type"][0];
//def assert_request_header_accept = assert_request_header["Accept"][0];
log.info assert_request_header_content_type
int assert_index = assert_response_contentType.indexOf(assert_request_header_content_type);

/* ****ASSERT CONTENT-TYPE MATCH   ******** */

if(assert_index>=0)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(8,RowId,"applicatiom/xhtml+xml is obsolete",format))
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,assert_response_contentType.toString(),format))
}
/* ****ASSERT CONTENT-TYPE MATCH   ******** */
sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertContentType",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="142" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveListWithPoolIdForHeader2" id="d8213866-719a-4e1a-a122-9fcacf71cd13"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveListWithPoolIdForHeader2" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def teststep = context.getCurrentStep().getLabel();
def HOST = context.testCase.getTestStepByName(teststep).getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders//context.getCurrentStep().getLabel()
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(8,RowId,"applicatiom/xhtml+xml is obsolete",format))
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>/*
def httpHeaderResponse = context.testCase.testSteps["RetrieveListWithPoolId"].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
contentType = contentType[0..index]
def header = context.testCase.testSteps["RetrieveListWithPoolId"].getHttpRequest().getRequestHeaders()
header = header["Content-Type"][0]

if(header==contentType)
	log.info "PASS"
else
	log.info "FAIL"
*/

import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def teststep = context.getCurrentStep().getLabel();
def HOST = context.testCase.getTestStepByName(teststep).getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT CONTENT-TYPE MATCH   ******** */
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders//context.getCurrentStep().getLabel()
def assert_response_contentType = httpResponseHeaders["Content-Type"][0]
log.info assert_response_contentType
def assert_request_header = context.testCase.testSteps[teststep].getHttpRequest().getRequestHeaders();
def assert_request_header_content_type = assert_request_header["Content-Type"][0];
//def assert_request_header_accept = assert_request_header["Accept"][0];
log.info assert_request_header_content_type
int assert_index = assert_response_contentType.indexOf(assert_request_header_content_type);

/* ****ASSERT CONTENT-TYPE MATCH   ******** */

if(assert_index>=0)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(8,RowId,"applicatiom/xhtml+xml is obsolete",format))
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,assert_response_contentType.toString(),format))
}
/* ****ASSERT CONTENT-TYPE MATCH   ******** */
sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertContentType",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="142" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="fcbca694-1e4a-4f36-9bf2-aba32800805e"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="EditUriList" id="f4a1e1ff-2f71-481a-997b-e859c5c2c7c6"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def content=new String[3];
for(int i=0;i&lt;2;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['CreateAContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content[i]=location;
}

context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content[0]+"\n"+content[1]);
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="3d994964-ff50-4f0d-b41a-95ea872f0ecc"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="910b614d-4c60-4bd6-a0f6-ff35c02ffdb5"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3306
http://qa-eta:8080/webservice/escenic/content/3307</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
*/
import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="201")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="142" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f16dcfef-5175-4399-8ea4-e84ba51c4b35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteListItems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="1eb14d29-b52a-44ad-a205-2387ed88b4db"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="SetParams" id="055da637-1726-461d-a538-2e5d459ca0d2"><con:settings/><con:config><script>context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="094f9b4a-a413-498a-aab8-a8340c56174b"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="2d2bd5e9-0dca-4bdb-9aae-b8daf1842237"><con:settings/><con:config><script>//import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def response = context.expand('${RetrieveSectionLists#Response}');
ID = context.utility.GetAListIDFromResponse(response);
log.info ID;

context.testCase.testSteps["RetrieveAList"].setPropertyValue("ListPoolID",ID);
context.testCase.testSteps["RetrieveTheEmptyList"].setPropertyValue("ListPoolID",ID);

def new_headers = new StringToStringMap()
new_headers.put("Accept","application/atom+xml");
new_headers.put("Content-Type","application/atom+xml");
testRunner.testCase.getTestStepByName("RetrieveAList").testRequest.setRequestHeaders(new_headers);

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAList" id="7e0e24ed-2b4a-46e2-b2ba-1b291a423ab8"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>
def httpResponseHeaders = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>def httpHeaderResponse = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
if(index&lt;0)
{
	def header =contentType;
	if(header==contentType)
	log.info "PASS"
	else
	log.info "FAIL"

}
else
{
	contentType = contentType[0..index]
	def header = context.testCase.testSteps["RetrieveAList"].getHttpRequest().getRequestHeaders()
	header = header["Content-Type"][0]
	
	if(header==contentType)
		log.info "PASS"
	else
		log.info "FAIL"

}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="2c18ebc6-9bb1-4373-bd67-bcc47f66c766"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "CreateAContent";
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="CreateContentItems" id="52e8d083-20e9-4dc8-acac-e00373066db8"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
script = context.Utility;

def response = context.expand('${RetrieveAList#Response}');

int NumberOfContents = context.utility.GetNumberOfListItems(response);
log.info NumberOfContents;

if(NumberOfContents&lt;10)
{
	String content="";
	for(int i=0;i&lt;10;i++)
	{
		testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent'])
		def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
		def location = httpResponseHeaders["Location"][0];
		content=content+location+"\n";
	}
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content);
}
else
{
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request","");
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="076e9233-e370-4e31-bc04-3b8e7c4fa7e6"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "AddContentItems";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "Inside PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DeleteContentItems" id="da72a29b-58a3-4341-b5f1-1b01dc57644a"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['RetrieveAList'])
def response = context.expand('${RetrieveAList#Response}');
def xml = new XmlParser().parseText(response);

def start,end,HandleLink,handleId;
def ID = xml.'entry'.'id';

for(int i=0;i&lt;ID.size()-1;i++)
{
	HandleLink = ID[i].value()[0];
	start = HandleLink.indexOf("/handle/")+"/handle/".length();
	end = HandleLink.length()-1;
	handleId = HandleLink[start..end];
	context.testCase.testSteps["DeleteAContent"].setPropertyValue("HANDLEID",handleId);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['DeleteAContent'])
}

int lastIndex = ID.size()-1;
if(lastIndex>=0)
{
	HandleLink = ID[lastIndex].value()[0];
	start = HandleLink.indexOf("/handle/")+"/handle/".length();
	end = HandleLink.length()-1;
	handleId = HandleLink[start..end];
	context.testCase.testSteps["DeleteAContent"].setPropertyValue("HANDLEID",handleId);
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="DeleteAContent" id="15e71ca3-30f0-4dac-b5d4-50ea13345b92"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="DeleteContentFromList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteAContent" id="f5490f2b-0c67-41cb-a347-6f2b827ea8a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="89ac3257-ca97-4b8b-b0d5-21dd90e63871" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["DeleteAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1526" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>HANDLEID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveTheEmptyList" id="105def09-71db-4075-93da-0f42a46872c0"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveTheEmptyList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="30593486-3271-4e60-97bc-5b413f207cf8" name="CheckListItemCount"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}
def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT TOTAL LIST ITEMS   ******** */
def response = context.expand('${RetrieveTheEmptyList#Response}');
def xml = new XmlParser().parseText(response);
def start,end;
def Items = xml.'entry'.'id';

/* ****ASSERT STATUS CODE   ******** */


if(Items.size()==0)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	sheet.addCell(new Label(9,RowId,"All Contents should be deleted",format))
	sheet.addCell(new Label(10,RowId,"Remaining List Items="+Items.size(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"CheckListItemCount",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="64c7fa36-b31f-40ee-bb41-ace6285c3233" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PriorityOfContentsOfList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="d7599649-7c95-443f-a19c-07fd4f5ddf5b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="SetParams" id="f3294579-104d-4c82-9b5a-6c9669f7e34f"><con:settings/><con:config><script>context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="55cff097-01c2-4752-9488-4a3ca3e5513b"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="0819ea32-af7d-4db9-883d-9c2a8720f9fc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${RetrieveSectionLists#Response}');
def xml = new XmlParser().parseText(response);
def start,end;

def ListID = xml.'entry'.'id';
def ID = ListID[0].value()[0];
start = ID.indexOf("list")+"list/".length();
end = ID.length()-1;
ID = ID[start..end]
context.testCase.testSteps["RetrieveAList"].setPropertyValue("ListPoolID",ID);


def new_headers = new StringToStringMap()
new_headers.put("Accept","application/atom+xml");
new_headers.put("Content-Type","application/atom+xml");
testRunner.testCase.getTestStepByName("RetrieveAList").testRequest.setRequestHeaders(new_headers)
testRunner.testCase.getTestStepByName("RetrieveTheList").testRequest.setRequestHeaders(new_headers)
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAList" id="3b745464-b35d-4175-bed7-85f72c469843"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>
def httpResponseHeaders = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>def httpHeaderResponse = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
if(index&lt;0)
{
	def header =contentType;
	if(header==contentType)
	log.info "PASS"
	else
	log.info "FAIL"

}
else
{
	contentType = contentType[0..index]
	def header = context.testCase.testSteps["RetrieveAList"].getHttpRequest().getRequestHeaders()
	header = header["Content-Type"][0]
	
	if(header==contentType)
		log.info "PASS"
	else
		log.info "FAIL"

}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetHandleID" id="8d196bc5-079b-4073-b833-5daf83a1d03b"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
def response = context.expand('${RetrieveAList#Response}');
def Xml = new XmlParser().parseText(response);

def handleId = Xml.'entry'.'id';
def handleLink;
int start,end;
String testcase = context.testCase.name;
String testsuite = context.testCase.testSuite.name;
String teststep = "DeleteAContentFromList";

log.info handleId.size()
String ID;
testRunner.testCase.testSteps[teststep].assertions["AssertStatusCode"].disabled = true;
if(handleId.size()>0)
{
	for(int i=0;i&lt;handleId.size();i++)
	{
		handleLink = handleId[i].value()[0];
		start = handleLink.indexOf("/handle/")+"/handle/".length();
		end = handleLink.length()-1;
		ID = handleLink[start..end];
		log.info ID
		context.testCase.testSteps[teststep].setPropertyValue("HANDLEID",ID);
		testRunner.runTestStep(project.testSuites[testsuite].testCases[testcase].testSteps[teststep])		
	}
}

testRunner.testCase.testSteps[teststep].assertions["AssertStatusCode"].disabled = false;
</script></con:config></con:testStep><con:testStep type="restrequest" name="DeleteAContentFromList" id="f4afb9d7-8969-45d0-a44f-3386963f247a"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="DeleteContentFromList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteAContentFromList" id="f5490f2b-0c67-41cb-a347-6f2b827ea8a1" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="96f9efdf-0313-45f3-8ab5-4807eef3b842" name="AssertStatusCode"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1278" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>HANDLEID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="EditUriListAndSetListID" id="07117cab-cb3a-4ea7-9973-2ebe97485600"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
String teststep = "AddContentItems";

//testRunner.testCase.testSteps["CreateAContent"].disabled=false;
	
def content=new String[3];
for(int i=0;i&lt;2;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['CreateAContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content[i]=location;
}

context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content[0]+"\n"+content[1]);

/*  GET THE LISTPOOL ID WHICH HAVE NO CONTENTS ** */
testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['RetrieveAList'])
def response = context.expand('${RetrieveAList#Response}');
def Xml = new XmlParser().parseText(response);
def ListId = Xml.'id';
def HandleId = Xml.'entry'.'id';
int start,end;
String ID;
if(HandleId.size()==0)//as all the items of the list deleted before it is a must enter
{
	ListLink = ListId[0].value()[0];
	start = ListLink.indexOf("list-pool/")+"list-pool/".length();
	end = ListLink.length()-1;
	ID = ListLink[start..end];
}
context.testCase.testSteps["AddContentItems"].setPropertyValue("ListPoolID",ID);
testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps[teststep])

//testRunner.testCase.testSteps[teststep].disabled = false;
</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="5fa1d715-d923-493f-823c-b71336430bdf"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="4eaf85f6-25b5-48b7-856b-d30fa35bd468"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3310
http://qa-eta:8080/webservice/escenic/content/3311</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "AddContentItems";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveTheList" id="5da23c10-0b43-4d3e-a136-1a83f4937972"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveTheList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a621374b-ca6b-495e-985f-e98b5deaaa0d" name="AssertPriorityOfUnpinnedItem"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT PRIORITY VALUE OF UNPINNED CONTENT   ******** */
def response = context.expand('${RetrieveAList#Response}');
def Xml = new XmlParser().parseText(response);

def val;
int PASS=1;
def root = Xml.'entry'.'content'.'vdf:payload'.'vdf:field';
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@name=='com.escenic.priority')//pinned
	{
		val = root[i].'vdf:value'[0].value()[0];
		if(val!='-1')
		PASS=0;
	}
}

/* ****ASSERT PRIORITY VALUE OF UNPINNED CONTENT   ******** */

if(PASS==1)
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertPriorityOfUnpinnedItem",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c4f6ca6b-db03-4dce-b2a5-a786faca6519" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PinUnPinAListItems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="e34f5ed1-5709-4e37-b385-5410d5dfdcc8"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveListItem"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["PinAListItem"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveAListWithPinnedItem"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["UnPinAListItem"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveUnPinnedList"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="SetParams" id="bf496f08-7c7b-4f2c-8aff-07ac32776266"><con:settings/><con:config><script>context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="5175d551-0910-4e82-bb8e-358bf662ae93"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="7fa84165-9b96-4c5b-bc23-3144c1d1fa06"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${RetrieveSectionLists#Response}');
def xml = new XmlParser().parseText(response);
def start,end;

def ListID = xml.'entry'.'id';
def ID = ListID[0].value()[0];
start = ID.indexOf("list")+"list/".length();
end = ID.length()-1;
ID = ID[start..end]
context.testCase.testSteps["RetrieveAList"].setPropertyValue("ListPoolID",ID);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("ListPoolID",ID);
context.testCase.testSteps["AddContentItems"].setPropertyValue("ListPoolID",ID);
context.testCase.testSteps["RetrieveAListWithPinnedItem"].setPropertyValue("ListPoolID",ID);
context.testCase.testSteps["RetrieveUnPinnedList"].setPropertyValue("ListPoolID",ID);

def new_headers = new StringToStringMap()
new_headers.put("Accept","application/atom+xml");
new_headers.put("Content-Type","application/atom+xml");
testRunner.testCase.getTestStepByName("RetrieveAList").testRequest.setRequestHeaders(new_headers)

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAList" id="fc2c2261-8a0f-4d8e-82eb-926f377788aa"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>
def httpResponseHeaders = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>def httpHeaderResponse = context.testCase.testSteps["RetrieveAList"].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
if(index&lt;0)
{
	def header =contentType;
	if(header==contentType)
	log.info "PASS"
	else
	log.info "FAIL"

}
else
{
	contentType = contentType[0..index]
	def header = context.testCase.testSteps["RetrieveAList"].getHttpRequest().getRequestHeaders()
	header = header["Content-Type"][0]
	
	if(header==contentType)
		log.info "PASS"
	else
		log.info "FAIL"

}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="0936bce3-03af-401a-a09f-b9032bc022e2"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "Inside PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="CreateContentItems" id="b3890c9c-3c01-465b-8e59-a766599f4576"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
def response = context.expand('${RetrieveAList#Response}');
def xml = new XmlParser().parseText(response);
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def start,end;
def ID = xml.'entry'.'id';

if(ID.size()&lt;10)
{
	String content="";
	for(int i=0;i&lt;10;i++)
	{
		testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent'])
		def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
		def location = httpResponseHeaders["Location"][0];
		content=content+location+"\n";
	}
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content);
	//testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['AddContentItems'])
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="956a8025-3119-402e-ad94-fe65270fca8a"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3314
http://qa-eta:8080/webservice/escenic/content/3315
http://qa-eta:8080/webservice/escenic/content/3316
http://qa-eta:8080/webservice/escenic/content/3317
http://qa-eta:8080/webservice/escenic/content/3318
http://qa-eta:8080/webservice/escenic/content/3319
http://qa-eta:8080/webservice/escenic/content/3320
http://qa-eta:8080/webservice/escenic/content/3321
http://qa-eta:8080/webservice/escenic/content/3322
http://qa-eta:8080/webservice/escenic/content/3323
</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "AddContentItems";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "Inside PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveTheList" id="09a32272-7498-41c5-bf42-be943e74d41f"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveTheList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep =context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetHandleID" id="f2c5fb60-04bb-4e37-bf98-ae51ecca2ca3"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
def response = context.expand('${RetrieveTheList#Response}');

String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int ThirdItem = 2;
def handleId = context.utility.GetAHandleIDOfList(response,ThirdItem);
project.testSuites[suitename].testCases[testcase].testSteps['RetrieveListItem'].setPropertyValue("HANDLEID",handleId);
project.testSuites[suitename].testCases[testcase].testSteps['PinAListItem'].setPropertyValue("HANDLEID",handleId);
project.testSuites[suitename].testCases[testcase].testSteps['UnPinAListItem'].setPropertyValue("HANDLEID",handleId);</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveListItem" id="d5527c67-993a-485a-ab71-7df447c7c494"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="RetrieveContentFromList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveListItem" id="44ea2efc-9357-475e-9857-5d6ebf6eb71b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/588</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e598e25e-1dfc-45e4-935e-d459d4df2c2a" name="AssertStatusCode"><con:configuration><scriptText>def teststep =context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1823" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetPinAnItem" id="fe858fd7-6e72-4e6c-bac7-0ec3c865e65a"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.types.StringToStringMap
def project = testRunner.testCase.testSuite.project
def response = context.expand('${RetrieveListItem#Response}');
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
def grrovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = grrovyUtils.getXmlHolder(response);


response = response.replaceAll("<vdf:value>false</vdf:value>","<vdf:value>true</vdf:value>")
response = response.replaceAll("<vdf:value>-1</vdf:value>","<vdf:value>3</vdf:value>")
project.testSuites[suitename].testCases[testcase].testSteps['PinAListItem'].setPropertyValue("Request",response);

/*
def xml = new XmlParser().parseText(response);
def prioritynode = xml.'content'.'vdf:payload'.'vdf:field';

for(int i=0;i<prioritynode.size();i++)
{
	 if(prioritynode[i].@name=="com.escenic.pinned")
		prioritynode[i].'vdf:value'[0].value()[0]=true;
	if(prioritynode[i].@name=="com.escenic.priority")
		prioritynode[i].'vdf:value'[0].value()[0]=3;
}
*/]]></script></con:config></con:testStep><con:testStep type="restrequest" name="PinAListItem" id="ea42b39f-e49a-4ab2-9890-4bc51013e35b"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="UpdateAHandleID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PinAListItem" id="eaf41573-bc4e-4faa-adef-e04a7b89a252" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="type" value="entry"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-eta:8080/webservice/escenic/list-pool/handle/1823</id>\r
   <title type="text">(type=1 ,id=3316 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/1823" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/1823" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-eta:8080/webservice/escenic/content/3316" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>3</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>true</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-eta:8080/webservice/escenic/list-pool/145" type="text/uri-list"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d030fcbc-761a-49af-8d65-bfc9deaec2f9" name="AssertStatusCode"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}
def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1823" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAListWithPinnedItem" id="c22a49b8-2c81-4981-881e-7ebbd31f6a4b"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAListWithPinnedItem" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="CheckPinPriorityValue"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def response = context.expand('${RetrieveAListWithPinnedItem#Response}');
def xml = new XmlParser().parseText(response);
def start,end;
def Items = xml.'entry'.'content';
/* CHECK THE THIRD ITEM OF THE LIST*/
def ListItem = Items[2].'vdf:payload'.'vdf:field';
def isPinned,priority;
for(int i=0;i&lt;ListItem.size();i++)
{
	if(ListItem[i].@name=="com.escenic.priority")
		priority =  ListItem[i].'vdf:value'[0].value()[0];
	if(ListItem[i].@name=="com.escenic.pinned")
		isPinned =  ListItem[i].'vdf:value'[0].value()[0];
}

/* ****ASSERT STATUS CODE   ******** */


if(priority=="3" &amp;&amp; isPinned=="true")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	sheet.addCell(new Label(9,RowId,"Priority=3;Pinned=true",format))
	sheet.addCell(new Label(10,RowId,"Priority="+priority+";"+"Pinned="+isPinned,format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"CheckPinPriorityValue",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetUnPinAnItem" id="cf5c5518-19a8-4292-a75b-ae490f719bff"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToStringMap
def project = testRunner.testCase.testSuite.project
def response = context.expand('${PinAListItem#Request}');
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
def grrovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = grrovyUtils.getXmlHolder(response);


response = response.replaceAll("&lt;vdf:value>true&lt;/vdf:value>","&lt;vdf:value>false&lt;/vdf:value>")
project.testSuites[suitename].testCases[testcase].testSteps['UnPinAListItem'].setPropertyValue("Request",response);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UnPinAListItem" id="d59c6c9f-5531-493f-ba57-79348c313af2"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="UpdateAHandleID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UnPinAListItem" id="eaf41573-bc4e-4faa-adef-e04a7b89a252" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="type" value="entry"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-eta:8080/webservice/escenic/list-pool/handle/1823</id>\r
   <title type="text">(type=1 ,id=3316 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/1823" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/1823" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-eta:8080/webservice/escenic/content/3316" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>3</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-eta:8080/webservice/escenic/list-pool/145" type="text/uri-list"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="de747b86-3b29-4ecb-b570-467806ae02e1" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["UnPinAListItem"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "Inside PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1823" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveUnPinnedList" id="178c83b8-b24e-4ae9-b8e3-9f58c1535640"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveUnPinnedList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="CheckPinPriorityValue"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def response = context.expand('${RetrieveUnPinnedList#Response}');
def xml = new XmlParser().parseText(response);
def start,end;
def Items = xml.'entry'.'content';
/* CHECK THE THIRD ITEM OF THE LIST*/
def ListItem = Items[2].'vdf:payload'.'vdf:field';
def isPinned,priority;
for(int i=0;i&lt;ListItem.size();i++)
{
	if(ListItem[i].@name=="com.escenic.priority")
		priority =  ListItem[i].'vdf:value'[0].value()[0];
	if(ListItem[i].@name=="com.escenic.pinned")
		isPinned =  ListItem[i].'vdf:value'[0].value()[0];
}

/* ****ASSERT STATUS CODE   ******** */


if(priority=="-1" &amp;&amp; isPinned=="false")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	sheet.addCell(new Label(9,RowId,"Priority=-1;Pinned=false",format))
	sheet.addCell(new Label(10,RowId,"Priority="+priority+";"+"Pinned="+isPinned,format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"CheckPinPriorityValue",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a6121cc4-188c-4caf-8311-1d2241404c1d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestInsertListRespnse" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="1a9a464e-d82d-4945-afb6-0d631355e1aa"><con:settings/><con:config><script>/*  Test Case VF-6614,6258  */
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="SetParams" id="b489e74d-99f6-45a0-bced-978092451300"><con:settings/><con:config><script>context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="389261e7-161e-4d46-9445-878d49d49da4"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="21f0fd5d-da03-4267-bf95-9d2b1b663504"><con:settings/><con:config><script>//import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def response = context.expand('${RetrieveSectionLists#Response}');
ID = context.utility.GetAListIDFromResponse(response);
log.info ID;

context.testCase.testSteps["RetrieveAList"].setPropertyValue("ListPoolID",ID);
//context.testCase.testSteps["RetrieveTheEmptyList"].setPropertyValue("ListPoolID",ID);

def new_headers = new StringToStringMap()
new_headers.put("Accept","application/atom+xml");
new_headers.put("Content-Type","application/atom+xml");
testRunner.testCase.getTestStepByName("RetrieveAList").testRequest.setRequestHeaders(new_headers);

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAList" id="0f9cf5f2-ee5e-427d-99c4-f0feebd5146f"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpHeaderResponse = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
if(index&lt;0)
{
	def header =contentType;
	if(header==contentType)
	log.info "PASS"
	else
	log.info "FAIL"

}
else
{
	contentType = contentType[0..index]
	def header = context.testCase.testSteps[teststep].getHttpRequest().getRequestHeaders()
	header = header["Content-Type"][0]
	
	if(header==contentType)
		log.info "PASS"
	else
		log.info "FAIL"

}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="CreateContentItems" id="d067e661-eab9-485a-ba70-518574e2c0e5"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def response = context.expand('${RetrieveAList#Response}');

int NumberOfContents = context.utility.GetNumberOfListItems(response);
log.info NumberOfContents;

if(NumberOfContents&lt;10)
{
	String content="";
	int num = 10 - NumberOfContents;
	for(int i=0;i&lt;num;i++)
	{
		testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent'])
		def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
		def location = context.utility.GetContentUrl(httpResponseHeaders);
		content=content+location+"\n";
	}
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content);
}
else
{
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request","");
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="5efc0036-08ce-4e2d-bf19-306bda5d1190"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "CreateAContent";
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="7f6593dc-2ed3-46ef-a1d4-27880cd5e6e9"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3417
http://qa-eta:8080/webservice/escenic/content/3418
http://qa-eta:8080/webservice/escenic/content/3419
http://qa-eta:8080/webservice/escenic/content/3420
http://qa-eta:8080/webservice/escenic/content/3421
http://qa-eta:8080/webservice/escenic/content/3422
http://qa-eta:8080/webservice/escenic/content/3423
http://qa-eta:8080/webservice/escenic/content/3424
http://qa-eta:8080/webservice/escenic/content/3425
http://qa-eta:8080/webservice/escenic/content/3426
</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "AddContentItems";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "Inside PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f24c91c3-23d4-46de-93a8-cbc180defbcf" name="AssertContentType"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeader = context.testCase.testSteps[teststep].testRequest.response.responseHeaders;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def res = context.utility.IsContenType(httpResponseHeader,"application/atom+xml");
if(res>=0)
	log.info "PASS";
else
	log.info "FAIL";</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetListInsertion" id="29f7f742-2332-4942-84c5-98f372340b83"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project;
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def content = "";
def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders;
def location = httpResponseHeaders["Location"][0];
content = location;
testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent']);
httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders;
location = httpResponseHeaders["Location"][0];
content = content+"\n"+location;

context.testCase.testSteps["InsertToList"].setPropertyValue("Request",content);

int InsertAt = 2;
def response = context.expand('${RetrieveAList#Response}');
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
String handleId = context.utility.GetAHandleIDOfList(response,InsertAt);
context.testCase.testSteps["InsertToList"].setPropertyValue("HANDLEID",handleId);

</script></con:config></con:testStep><con:testStep type="restrequest" name="InsertToList" id="4ca6bfca-349a-4c88-916a-e1e38b456d3a"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="Insert" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="InsertToList" id="c6b91f20-3b3d-470e-88ad-01d90e723a76" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3415
http://qa-eta:8080/webservice/escenic/content/3416</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/1546</con:originalUri><con:assertion type="GroovyScriptAssertion" id="714dc251-6f66-4d98-8170-c99c7d76d4cd" name="AssertContentType"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeader = context.testCase.testSteps[teststep].testRequest.response.responseHeaders;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def res = context.utility.IsContenType(httpResponseHeader,"application/atom+xml");
if(res>=0)
	log.info "PASS";
else
	log.info "FAIL";</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="1606" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a2870e05-a9d6-4f84-a4cd-fcf42c740641" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestPindItemRemovdFirst" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetServerAndCredentials" id="82e40b9e-607d-406a-8975-6de6a7c38550"><con:settings/><con:config><script>/*  Test Case VF-6614,6258  */
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String user = xml.'user';
String password = xml.'password';

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("EndPoint",server);
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}
/*
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("Username",user);

context.testCase.testSteps["RetrieveAList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["DeleteAContentFromList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["AddContentItems"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["RetrieveTheList"].setPropertyValue("EndPoint",server);
context.testCase.testSteps["CreateAContent"].setPropertyValue("EndPoint",server);
*/</script></con:config></con:testStep><con:testStep type="groovy" name="SetParams" id="b57c1ee5-b72d-4085-ab94-79cc12da3bf2"><con:settings/><con:config><script>context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("SECTION","section")
context.testCase.testSteps["RetrieveSectionLists"].setPropertyValue("PUBLICATIONID","1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveSectionLists" id="c4050974-9bcd-40df-8b30-60cf905660e1"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/{SECTION}/{PUBLICATIONID}/lists" methodName="Retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSectionLists" id="64d30ee4-e4bf-4f51-82b0-65564e4a0ac5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/lists</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c893eb64-f4cb-4a92-a4e3-6960e532d321" name="AssertStausCode"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetrieveSectionLists"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SECTION" value="section"/>
  <con:entry key="PUBLICATIONID" value="1"/>
</con:parameters><con:parameterOrder><con:entry>SECTION</con:entry><con:entry>PUBLICATIONID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="052c0b4d-c2f9-4256-be60-b26e89ed3a26"><con:settings/><con:config><script>//import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def response = context.expand('${RetrieveSectionLists#Response}');
ID = context.utility.GetAListIDFromResponse(response);
log.info ID;

context.testCase.testSteps["RetrieveAList"].setPropertyValue("ListPoolID",ID);
//context.testCase.testSteps["RetrieveTheEmptyList"].setPropertyValue("ListPoolID",ID);

def new_headers = new StringToStringMap()
new_headers.put("Accept","application/atom+xml");
new_headers.put("Content-Type","application/atom+xml");
testRunner.testCase.getTestStepByName("RetrieveAList").testRequest.setRequestHeaders(new_headers);

</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveAList" id="91e6ad32-bff6-4c76-9794-30303c31390d"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/atom+xml"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "RetrieveAList";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0cabceac-fb39-4ed9-ad0c-1a0c62b2bce0" name="AssertContentType"><con:configuration><scriptText>def teststep = "RetrieveAList";//context.getCurrentStep().getLabel();
def httpHeaderResponse = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def contentType = httpHeaderResponse["Content-Type"][0]
int index = contentType.indexOf(";")-1
if(index&lt;0)
{
	def header =contentType;
	if(header==contentType)
	log.info "PASS"
	else
	log.info "FAIL"

}
else
{
	contentType = contentType[0..index]
	def header = context.testCase.testSteps[teststep].getHttpRequest().getRequestHeaders()
	header = header["Content-Type"][0]
	
	if(header==contentType)
		log.info "PASS"
	else
		log.info "FAIL"

}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="CreateContentItems" id="5cd06902-9c72-4b2e-9a2c-c102ed7cd337"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def response = context.expand('${RetrieveAList#Response}');

int NumberOfContents = context.utility.GetNumberOfListItems(response);
log.info NumberOfContents;

if(NumberOfContents&lt;100)
{
	String content="";
	int num = 100 - NumberOfContents;
	for(int i=0;i&lt;num;i++)
	{
		testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent'])
		def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders
		def location = context.utility.GetContentUrl(httpResponseHeaders);
		content=content+location+"\n";
	}
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request",content);
}
else
{
	context.testCase.testSteps["AddContentItems"].setPropertyValue("Request","");
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="CreateAContent" id="8a761833-ed82-48fb-ab4c-8d1e5e795e02"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/content/{CONTENTID}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAContent" id="4863d074-f76d-46de-80ea-4c4aa40324b7" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app"
       xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" xmlns:dcterms="http://purl.org/dc/terms/">
  <title type="text">Testing ::My first item</title>
  <app:control>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext">published</vaext:state>
  </app:control>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types"
         model="http://host-ip-address/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/content/1000</con:originalUri><con:assertion type="GroovyScriptAssertion" id="37a2e195-3a4b-44c6-aa77-02e79d6c1bb9" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "CreateAContent";
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>CONTENTID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="AddContentItems" id="b65e207b-a86d-4215-80cb-07e4a19696c4"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="InsertItems" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AddContentItems" id="ff8870b3-d3e5-4ae6-8517-16e583d43dd8" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3514
http://qa-eta:8080/webservice/escenic/content/3515
http://qa-eta:8080/webservice/escenic/content/3516
http://qa-eta:8080/webservice/escenic/content/3517
http://qa-eta:8080/webservice/escenic/content/3518
http://qa-eta:8080/webservice/escenic/content/3519
http://qa-eta:8080/webservice/escenic/content/3520
http://qa-eta:8080/webservice/escenic/content/3521
http://qa-eta:8080/webservice/escenic/content/3522
http://qa-eta:8080/webservice/escenic/content/3523
http://qa-eta:8080/webservice/escenic/content/3524
http://qa-eta:8080/webservice/escenic/content/3525
http://qa-eta:8080/webservice/escenic/content/3526
http://qa-eta:8080/webservice/escenic/content/3527
http://qa-eta:8080/webservice/escenic/content/3528
http://qa-eta:8080/webservice/escenic/content/3529
http://qa-eta:8080/webservice/escenic/content/3530
http://qa-eta:8080/webservice/escenic/content/3531
http://qa-eta:8080/webservice/escenic/content/3532
http://qa-eta:8080/webservice/escenic/content/3533
http://qa-eta:8080/webservice/escenic/content/3534
http://qa-eta:8080/webservice/escenic/content/3535
http://qa-eta:8080/webservice/escenic/content/3536
http://qa-eta:8080/webservice/escenic/content/3537
http://qa-eta:8080/webservice/escenic/content/3538
http://qa-eta:8080/webservice/escenic/content/3539
http://qa-eta:8080/webservice/escenic/content/3540
http://qa-eta:8080/webservice/escenic/content/3541
http://qa-eta:8080/webservice/escenic/content/3542
http://qa-eta:8080/webservice/escenic/content/3543
http://qa-eta:8080/webservice/escenic/content/3544
http://qa-eta:8080/webservice/escenic/content/3545
http://qa-eta:8080/webservice/escenic/content/3546
http://qa-eta:8080/webservice/escenic/content/3547
http://qa-eta:8080/webservice/escenic/content/3548
http://qa-eta:8080/webservice/escenic/content/3549
http://qa-eta:8080/webservice/escenic/content/3550
http://qa-eta:8080/webservice/escenic/content/3551
http://qa-eta:8080/webservice/escenic/content/3552
http://qa-eta:8080/webservice/escenic/content/3553
http://qa-eta:8080/webservice/escenic/content/3554
http://qa-eta:8080/webservice/escenic/content/3555
http://qa-eta:8080/webservice/escenic/content/3556
http://qa-eta:8080/webservice/escenic/content/3557
http://qa-eta:8080/webservice/escenic/content/3558
http://qa-eta:8080/webservice/escenic/content/3559
http://qa-eta:8080/webservice/escenic/content/3560
http://qa-eta:8080/webservice/escenic/content/3561
http://qa-eta:8080/webservice/escenic/content/3562
http://qa-eta:8080/webservice/escenic/content/3563
http://qa-eta:8080/webservice/escenic/content/3564
http://qa-eta:8080/webservice/escenic/content/3565
http://qa-eta:8080/webservice/escenic/content/3566
http://qa-eta:8080/webservice/escenic/content/3567
http://qa-eta:8080/webservice/escenic/content/3568
http://qa-eta:8080/webservice/escenic/content/3569
http://qa-eta:8080/webservice/escenic/content/3570
http://qa-eta:8080/webservice/escenic/content/3571
http://qa-eta:8080/webservice/escenic/content/3572
http://qa-eta:8080/webservice/escenic/content/3573
http://qa-eta:8080/webservice/escenic/content/3574
http://qa-eta:8080/webservice/escenic/content/3575
http://qa-eta:8080/webservice/escenic/content/3576
http://qa-eta:8080/webservice/escenic/content/3577
http://qa-eta:8080/webservice/escenic/content/3578
http://qa-eta:8080/webservice/escenic/content/3579
http://qa-eta:8080/webservice/escenic/content/3580
http://qa-eta:8080/webservice/escenic/content/3581
http://qa-eta:8080/webservice/escenic/content/3582
http://qa-eta:8080/webservice/escenic/content/3583
http://qa-eta:8080/webservice/escenic/content/3584
http://qa-eta:8080/webservice/escenic/content/3585
http://qa-eta:8080/webservice/escenic/content/3586
http://qa-eta:8080/webservice/escenic/content/3587
http://qa-eta:8080/webservice/escenic/content/3588
http://qa-eta:8080/webservice/escenic/content/3589
http://qa-eta:8080/webservice/escenic/content/3590
http://qa-eta:8080/webservice/escenic/content/3591
http://qa-eta:8080/webservice/escenic/content/3592
http://qa-eta:8080/webservice/escenic/content/3593
http://qa-eta:8080/webservice/escenic/content/3594
http://qa-eta:8080/webservice/escenic/content/3595
http://qa-eta:8080/webservice/escenic/content/3596
http://qa-eta:8080/webservice/escenic/content/3597
http://qa-eta:8080/webservice/escenic/content/3598
http://qa-eta:8080/webservice/escenic/content/3599
http://qa-eta:8080/webservice/escenic/content/3600
http://qa-eta:8080/webservice/escenic/content/3601
http://qa-eta:8080/webservice/escenic/content/3602
http://qa-eta:8080/webservice/escenic/content/3603
http://qa-eta:8080/webservice/escenic/content/3604
http://qa-eta:8080/webservice/escenic/content/3605
http://qa-eta:8080/webservice/escenic/content/3606
http://qa-eta:8080/webservice/escenic/content/3607
http://qa-eta:8080/webservice/escenic/content/3608
http://qa-eta:8080/webservice/escenic/content/3609
http://qa-eta:8080/webservice/escenic/content/3610
http://qa-eta:8080/webservice/escenic/content/3611
http://qa-eta:8080/webservice/escenic/content/3612
http://qa-eta:8080/webservice/escenic/content/3613
</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/142</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d21720b8-51a7-4ccd-ad8e-f5f465503b73" name="AssertStatusCode"><con:configuration><scriptText>def teststep = "AddContentItems";//context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "Inside PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f24c91c3-23d4-46de-93a8-cbc180defbcf" name="AssertContentType"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeader = context.testCase.testSteps[teststep].testRequest.response.responseHeaders;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def res = context.utility.IsContenType(httpResponseHeader,"application/atom+xml");
if(res>=0)
	log.info "PASS";
else
	log.info "FAIL";</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetHandleID" id="09e7d5a0-8ad9-42aa-93c7-5d10ba48ce9e"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps["RetrieveAList"]);
def response = context.expand('${RetrieveAList#Response}');

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int ThirdItem = 2;
def handleId = context.utility.GetAHandleIDOfList(response,ThirdItem);
project.testSuites[suitename].testCases[testcase].testSteps['RetrieveTheListItem'].setPropertyValue("HANDLEID",handleId);
project.testSuites[suitename].testCases[testcase].testSteps['PinAListItem'].setPropertyValue("HANDLEID",handleId);
//project.testSuites[suitename].testCases[testcase].testSteps['UnPinAListItem'].setPropertyValue("HANDLEID",handleId);
</script></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveTheListItem" id="08270eb2-c509-4b23-b949-852ece11dea5"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="RetrieveContentFromList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveTheListItem" id="44ea2efc-9357-475e-9857-5d6ebf6eb71b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/588</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e598e25e-1dfc-45e4-935e-d459d4df2c2a" name="AssertStatusCode"><con:configuration><scriptText>def teststep =context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="2014" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="PinAnItemOfList" id="5d4ce436-52e6-4793-bfd0-9f027b986497"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.types.StringToStringMap
def project = testRunner.testCase.testSuite.project
def response = context.expand('${RetrieveTheListItem#Response}');
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
def grrovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = grrovyUtils.getXmlHolder(response);


response = response.replaceAll("<vdf:value>false</vdf:value>","<vdf:value>true</vdf:value>")
response = response.replaceAll("<vdf:value>-1</vdf:value>","<vdf:value>3</vdf:value>")
project.testSuites[suitename].testCases[testcase].testSteps['PinAListItem'].setPropertyValue("Request",response);
]]></script></con:config></con:testStep><con:testStep type="restrequest" name="PinAListItem" id="beb16f95-3692-4db8-979f-a10757b14d7e"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="UpdateAHandleID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PinAListItem" id="eaf41573-bc4e-4faa-adef-e04a7b89a252" mediaType="application/atom+xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="type" value="entry"/>
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-eta:8080/webservice/escenic/list-pool/handle/2014</id>\r
   <title type="text">(type=1 ,id=3515 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/2014" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-eta:8080/webservice/escenic/list-pool/handle/2014" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-eta:8080/webservice/escenic/content/3515" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>3</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>true</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-eta:8080/webservice/escenic/list-pool/145" type="text/uri-list"/>\r
</entry>]]></con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d030fcbc-761a-49af-8d65-bfc9deaec2f9" name="AssertStatusCode"><con:configuration><scriptText>import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}
def HOST = context.getCurrentStep().getHttpRequest().getEndpoint();
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def folder = new File('C:\\Users\\amnm\\Desktop\\TEST REPORT');
def sheet;
def  workbook;
File file = new File(folder,'Report.xls')
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

WritableCellFormat format;

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

/* ****ASSERT STATUS CODE   ******** */

if(httpStatusCode=="200")
{
	format = createFormatCellStatus(1)
	sheet.addCell(new Label(7,RowId,"PASS",format))
}
else
{
	format = createFormatCellStatus(2)
	sheet.addCell(new Label(7,RowId,"FAIL",format))
	if(httpResponseHeaders==null)
	{
		sheet.addCell(new Label(8,RowId,"Test Case did not exceuted properly",format))
	}
	sheet.addCell(new Label(9,RowId,"200",format))
	sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format))
}

sheet.addCell(new Label(0,RowId,GetTime(),format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,context.getCurrentStep().getLabel(),format));
sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

temp_copy.write()
temp_copy.close()
file.delete();
file = new File(folder,'Reports.xls');
file.renameTo(new File(folder,'Report.xls'))
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="2014" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetListInsertion" id="fb876191-a231-441e-8a26-0db08d2e7a6d"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project;
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def content = "";
def httpResponseHeaders = context.testCase.testSteps["CreateAContent"].testRequest.response.responseHeaders;
def location = httpResponseHeaders["Location"][0];
content = location;
testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateAContent']);

context.testCase.testSteps["InsertToList"].setPropertyValue("Request",content);

int InsertAt = 0;
def response = context.expand('${RetrieveAList#Response}');
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
String handleId = context.utility.GetAHandleIDOfList(response,InsertAt);
context.testCase.testSteps["InsertToList"].setPropertyValue("HANDLEID",handleId);

</script></con:config></con:testStep><con:testStep type="restrequest" name="InsertToList" id="0a3a5bff-3168-4c0a-a8a3-660b078cbcfa"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/handle/{HANDLEID}" methodName="Insert" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="InsertToList" id="c6b91f20-3b3d-470e-88ad-01d90e723a76" mediaType="text/uri-list" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request>http://qa-eta:8080/webservice/escenic/content/3615</con:request><con:originalUri>http://qa-eta/webservice/escenic/list-pool/handle/1546</con:originalUri><con:assertion type="GroovyScriptAssertion" id="714dc251-6f66-4d98-8170-c99c7d76d4cd" name="AssertContentType"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeader = context.testCase.testSteps[teststep].testRequest.response.responseHeaders;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def res = context.utility.IsContenType(httpResponseHeader,"application/atom+xml");
if(res>=0)
	log.info "PASS";
else
	log.info "FAIL";</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="HANDLEID" value="2013" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RetrieveTheList" id="877162c1-3dd1-439b-8e08-e505d85dc6bf"><con:settings/><con:config service="http://qa-eta:8080" resourcePath="/webservice/escenic/list-pool/{ListPoolID}" methodName="RetrieveListWithID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveTheList" id="37531bcc-fb10-4b99-8223-30c360267dea" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/atom+xml"/>
  &lt;con:entry key="Accept" value="application/atom+xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://qa-eta:8080</con:endpoint><con:request/><con:originalUri>http://qa-eta/webservice/escenic/list-pool/143</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ec3a3816-7944-4191-a595-c6c0c6e1cece" name="AssertStatusCode"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def httpResponseHeaders = context.testCase.testSteps[teststep].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="02f45fb5-d3cf-4079-ad95-2344a3ede899" name="AssertTopPinnedItemExists"><con:configuration><scriptText>def teststep = context.getCurrentStep().getLabel();
def response = context.expand('${RetrieveTheList#Response}');
def HandleIdOfPinnedItem = context.testCase.testSteps["PinAListItem"].getPropertyValue("HANDLEID");

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int IndexOfTheItem = 2;//checking third item
def HandleIdOfThierdItem = context.utility.GetAHandleIDOfList(response,IndexOfTheItem);
int isPinned = context.utility.IsPinnedItem(response,IndexOfTheItem);
if(isPinned ==1 &amp;&amp; HandleIdOfPinnedItem==HandleIdOfThierdItem)
	log.info "PASS";
else
	log.info "FAIL";

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ListPoolID" value="145" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="qa_admin" password="admin">http://qa-eta:8080</con:endpoint></con:endpointStrategy><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>